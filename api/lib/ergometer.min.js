var bleCentral,ergometer,__extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();!function(ergometer){!function(utils){function toHexString(i,byteCount){for(var string=new Number(i).toString(16);string.length<2*byteCount;)string="0"+string;return string}utils.getByte=function(value,byteIndex){return value>>8*byteIndex&255},utils.copyArrayBuffer=function(src){var dst=new ArrayBuffer(src.byteLength);return new Uint8Array(dst).set(new Uint8Array(src)),dst},utils.getUint24=function(data,offset){return(data.getUint8(offset+2)<<16)+(data.getUint8(offset+1)<<8)+data.getUint8(offset)},utils.bufferToString=function(buf){return String.fromCharCode.apply(null,new Uint8Array(buf))},utils.valueToNullValue=function(value,nullValue){return value==nullValue?null:value},utils.isDefined=function(variable){return void 0!==variable},utils.toHexString=toHexString,utils.typedArrayToHexString=function(data){if(data.buffer)data instanceof Uint8Array||(data=new Uint8Array(data.buffer));else{if(!(data instanceof ArrayBuffer))throw"not an ArrayBuffer or TypedArray.";data=new Uint8Array(data)}for(var str="",i=0;i<data.length;i++)str+=toHexString(data[i],1);return str},utils.hexStringToTypedArray=function(hexData){if(hexData.length%2!=0)throw"Wrong hexData string: "+hexData;for(var length=hexData.length/2,result=new Uint8Array(length),i=0;i<length;i++)result[i]=parseInt(hexData.substring(2*i,2*i+2),16);return result},utils.getTime=function(){return(new Date).getTime()},utils.promiseAllSync=function promiseAllSync(promisses){var first=promisses.shift();return void 0!==first&&first?first.then(function(){return promiseAllSync(promisses)},function(e){return console.error(e)}):Promise.resolve()}}(ergometer.utils||(ergometer.utils={}))}(ergometer=ergometer||{}),function(ergometer){!function(utils){var FunctionQueue=function(){function FunctionQueue(maxPendingPromises,maxQueuedPromises){this.maxPendingPromises=1/0,this.maxQueuedPromises=1/0,this.pendingPromises=0,this.queue=[],this.maxPendingPromises=void 0!==maxPendingPromises?maxPendingPromises:1/0,this.maxQueuedPromises=void 0!==maxQueuedPromises?maxQueuedPromises:1/0}return FunctionQueue.prototype.resolveWith=function(value){return value&&"function"==typeof value.then?value:new Promise(function(resolve){resolve(value)})},FunctionQueue.prototype.add=function(promiseGenerator,context){for(var params=[],_i=2;_i<arguments.length;_i++)params[_i-2]=arguments[_i];var self=this;return new Promise(function(resolve,reject){self.queue.length>=self.maxQueuedPromises?reject(new Error("Queue limit reached")):(self.queue.push({promiseGenerator:promiseGenerator,context:context,params:params,resolve:resolve,reject:reject}),self._dequeue())})},FunctionQueue.prototype.getPendingLength=function(){return this.pendingPromises},FunctionQueue.prototype.getQueueLength=function(){return this.queue.length},FunctionQueue.prototype._dequeue=function(){var self=this;if(this.pendingPromises>=this.maxPendingPromises)return!1;var item=this.queue.shift();if(!item)return!1;try{this.pendingPromises++,self.resolveWith(item.promiseGenerator.apply(item.context,item.params)).then(function(value){self.pendingPromises--,item.resolve(value),self._dequeue()},function(err){self.pendingPromises--,item.reject(err),self._dequeue()})}catch(err){self.pendingPromises--,item.reject(err),self._dequeue()}return!0},FunctionQueue}();utils.FunctionQueue=FunctionQueue}(ergometer.utils||(ergometer.utils={}))}(ergometer=ergometer||{}),function(ergometer){!function(pubSub){var PubSub=function(){function PubSub(){this.registry={}}return PubSub.prototype.pub=function(name){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];this.registry[name]&&this.registry[name].forEach(function(x){try{x.func.apply(x.object,args)}catch(e){console.log(e)}})},PubSub.prototype.pubASync=function(name){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];this.registry[name]&&this.registry[name].forEach(function(x){setTimeout(function(){x.func.apply(x.object,args)},0)})},PubSub.prototype.sub=function(applyObject,name,fn){var evnt=this.registry[name],newItem={object:applyObject,func:fn};if(evnt){var funcExists=!1;evnt.forEach(function(item){item.func==fn&&(funcExists=!0)}),funcExists||evnt.push(newItem)}else this.registry[name]=[newItem];this.pub("subscribed",name,this.subscribeCount(name))},PubSub.prototype.unsub=function(name,fn){var evnt=this.registry[name];if(evnt)for(var i=evnt.length-1;0<=i;i--)evnt[i].func==fn&&evnt.splice(i,1);this.pub("unsubscribed",name,this.subscribeCount(name))},PubSub.prototype.subscribeCount=function(name){var evnt=this.registry[name];return evnt?evnt.length:0},PubSub}();pubSub.PubSub=PubSub;var Event=function(){function Event(){this._subscribed=[]}return Event.prototype.doChangedEvent=function(){this._subScriptionChangedEvent&&this._subScriptionChangedEvent(this,this.count)},Event.prototype.findSubscription=function(event){return this._subscribed.forEach(function(item){if(item.func==event)return item}),null},Event.prototype.sub=function(applyObject,event){var newItem=this.findSubscription(event);newItem||(newItem={object:applyObject,func:event},this._subscribed.push(newItem),this.doChangedEvent())},Event.prototype.unsub=function(event){for(var i=this._subscribed.length-1;0<=i;i--)this._subscribed[i].func==event&&this._subscribed.splice(i,1);this.doChangedEvent()},Event.prototype.doPub=function(args){this._subscribed.forEach(function(item){item.func.apply(item.object,args)})},Object.defineProperty(Event.prototype,"pub",{get:function(){var pubsub=this;return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];pubsub.doPub(args)}},enumerable:!0,configurable:!0}),Object.defineProperty(Event.prototype,"pubAsync",{get:function(){var pubsub=this;return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];setTimeout(function(){pubsub.doPub(args)})}},enumerable:!0,configurable:!0}),Object.defineProperty(Event.prototype,"count",{get:function(){return this._subscribed.length},enumerable:!0,configurable:!0}),Event.prototype.registerChangedEvent=function(func){this._subScriptionChangedEvent=func},Event}();pubSub.Event=Event}(ergometer.pubSub||(ergometer.pubSub={}))}(ergometer=ergometer||{}),function(ergometer){var LogLevel,MonitorConnectionState;!function(LogLevel){LogLevel[LogLevel.error=0]="error",LogLevel[LogLevel.info=1]="info",LogLevel[LogLevel.debug=2]="debug",LogLevel[LogLevel.trace=3]="trace"}(LogLevel=ergometer.LogLevel||(ergometer.LogLevel={})),function(MonitorConnectionState){MonitorConnectionState[MonitorConnectionState.inactive=0]="inactive",MonitorConnectionState[MonitorConnectionState.deviceReady=1]="deviceReady",MonitorConnectionState[MonitorConnectionState.scanning=2]="scanning",MonitorConnectionState[MonitorConnectionState.connecting=3]="connecting",MonitorConnectionState[MonitorConnectionState.connected=4]="connected",MonitorConnectionState[MonitorConnectionState.servicesFound=5]="servicesFound",MonitorConnectionState[MonitorConnectionState.readyForCommunication=6]="readyForCommunication"}(MonitorConnectionState=ergometer.MonitorConnectionState||(ergometer.MonitorConnectionState={}));var MonitorBase=function(){function MonitorBase(){this._logEvent=new ergometer.pubSub.Event,this._logLevel=LogLevel.error,this._connectionStateChangedEvent=new ergometer.pubSub.Event,this._connectionState=MonitorConnectionState.inactive,this.initialize()}return Object.defineProperty(MonitorBase.prototype,"logEvent",{get:function(){return this._logEvent},enumerable:!0,configurable:!0}),MonitorBase.prototype.initialize=function(){},Object.defineProperty(MonitorBase.prototype,"logLevel",{get:function(){return this._logLevel},set:function(value){this._logLevel=value},enumerable:!0,configurable:!0}),MonitorBase.prototype.disconnect=function(){},Object.defineProperty(MonitorBase.prototype,"connectionState",{get:function(){return this._connectionState},enumerable:!0,configurable:!0}),MonitorBase.prototype.connected=function(){},Object.defineProperty(MonitorBase.prototype,"connectionStateChangedEvent",{get:function(){return this._connectionStateChangedEvent},enumerable:!0,configurable:!0}),MonitorBase.prototype.debugInfo=function(info){this.logLevel>=LogLevel.debug&&this.logEvent.pub(info,LogLevel.debug)},MonitorBase.prototype.showInfo=function(info){this.logLevel>=LogLevel.info&&this.logEvent.pub(info,LogLevel.info)},MonitorBase.prototype.traceInfo=function(info){this.logLevel>=LogLevel.trace&&this.logEvent.pub(info,LogLevel.trace)},MonitorBase.prototype.handleError=function(error,errorFn){this.logLevel>=LogLevel.error&&this.logEvent.pub(error,LogLevel.error),errorFn&&errorFn(error)},MonitorBase.prototype.getErrorHandlerFunc=function(errorDescription,errorFn){var _this=this;return function(e){_this.handleError(errorDescription+":"+e.toString(),errorFn)}},MonitorBase.prototype.beforeConnected=function(){},MonitorBase.prototype.changeConnectionState=function(value){if(this._connectionState!=value){var oldValue=this._connectionState;(this._connectionState=value)==MonitorConnectionState.connected&&this.beforeConnected(),this.connectionStateChangedEvent.pub(oldValue,value),value==MonitorConnectionState.connected&&this.connected()}},MonitorBase}();ergometer.MonitorBase=MonitorBase}(ergometer=ergometer||{}),function(ergometer){!function(ble){var DriverBleat=function(){function DriverBleat(){}return DriverBleat.prototype.getCharacteristic=function(serviceUid,characteristicUid){var service=this._device.services[serviceUid];if(service){var found=service.characteristics[characteristicUid];if(found)return found;throw"characteristics "+characteristicUid+" not found in service "+serviceUid}throw"service "+serviceUid+" not found"},DriverBleat.prototype.connect=function(device,disconnectFn){var _this=this;return new Promise(function(resolve,reject){try{var newDevice=device._internalDevice;newDevice.connect(function(){_this._device=newDevice,resolve()},disconnectFn,!1,function(e){reject(e)})}catch(e){reject(e)}})},DriverBleat.prototype.disconnect=function(){this._device&&this._device.disconnect()},DriverBleat.prototype.startScan=function(foundFn){return new Promise(function(resolve,reject){try{bleat.startScan(function(device){foundFn({address:device.address,name:device.name,rssi:device.adData.rssi,_internalDevice:device})},reject),resolve()}catch(e){reject(e)}})},DriverBleat.prototype.stopScan=function(){return new Promise(function(resolve,reject){try{bleat.stopScan(reject),resolve()}catch(e){reject(e)}})},DriverBleat.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){var _this=this;return new Promise(function(resolve,reject){try{var dataView=new DataView(data.buffer);_this.getCharacteristic(serviceUIID,characteristicUUID).write(dataView,resolve,reject),resolve()}catch(e){reject(e)}})},DriverBleat.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).read(function(data){resolve(data.buffer)},reject)}catch(e){reject(e)}})},DriverBleat.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){var _this=this;return new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).enableNotify(function(data){receive(data.buffer)},resolve,reject)}catch(e){reject(e)}})},DriverBleat.prototype.disableNotification=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).disableNotify(resolve,reject)}catch(e){reject(e)}})},DriverBleat}();ble.DriverBleat=DriverBleat}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(ergometer){!function(ble){var DriverSimpleBLE=function(){function DriverSimpleBLE(){}return DriverSimpleBLE.prototype.connect=function(device,disconnectFn){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.disconnect=function(){simpleBLE.disconnect()},DriverSimpleBLE.prototype.startScan=function(foundFn){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.stopScan=function(){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){return new Promise(function(resolve,reject){})},DriverSimpleBLE.prototype.disableNotification=function(serviceUIID,characteristicUUID){return new Promise(function(resolve,reject){})},DriverSimpleBLE}();ble.DriverSimpleBLE=DriverSimpleBLE}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(bleCentral){bleCentral.available=function(){return"undefined"!=typeof ble&&"function"==typeof ble.connectedPeripheralsWithServices};var DriverBleCentral=function(){function DriverBleCentral(_scanServices){this._scanServices=_scanServices}return DriverBleCentral.prototype.connect=function(device,disconnectFn){var _this=this;return new Promise(function(resolve,reject){ble.connect(device.address,function(periferalData){_this._device=periferalData,resolve()},disconnectFn)})},DriverBleCentral.prototype.disconnect=function(){ble.disconnect(this._device.id)},DriverBleCentral.prototype.startScan=function(foundFn){var _this=this;return new Promise(function(resolve,reject){ble.startScan(_this._scanServices,function(foundData){foundFn&&foundFn({address:foundData.id,name:foundData.name,rssi:foundData.rssi,_internalDevice:foundData})},reject),resolve()})},DriverBleCentral.prototype.stopScan=function(){return ble.withPromises.stopScan()},DriverBleCentral.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){return ble.withPromises.write(this._device.id,serviceUIID,characteristicUUID,data.buffer)},DriverBleCentral.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){return ble.withPromises.read(this._device.id,serviceUIID,characteristicUUID)},DriverBleCentral.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){var _this=this;return new Promise(function(resolve,reject){console.trace("enableNotification "+characteristicUUID),ble.startNotification(_this._device.id,serviceUIID,characteristicUUID,receive,reject),resolve()})},DriverBleCentral.prototype.disableNotification=function(serviceUIID,characteristicUUID){return ble.withPromises.stopNotification(this._device.id,serviceUIID,characteristicUUID)},DriverBleCentral}();bleCentral.DriverBleCentral=DriverBleCentral}(bleCentral=bleCentral||{}),function(ergometer){!function(ble){ble.hasWebBlueTooth=function(){return navigator&&void 0!==navigator.bluetooth};var DriverWebBlueTooth=function(){function DriverWebBlueTooth(_performanceMonitor,_scanServices,_scanOptionalServices){this._performanceMonitor=_performanceMonitor,this._scanServices=_scanServices,this._scanOptionalServices=_scanOptionalServices,this._listenerMap={},this._listerCharacteristicMap={}}return DriverWebBlueTooth.prototype.getCharacteristic=function(serviceUid,characteristicUid){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("getCharacteristic "+characteristicUid+" "),new Promise(function(resolve,reject){_this._server&&_this._server.connected?_this._server.getPrimaryService(serviceUid).then(function(service){return service.getCharacteristic(characteristicUid)}).then(resolve,reject):reject("server not connected")})},DriverWebBlueTooth.prototype.onDisconnected=function(event){this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("onDisconnected "),this._disconnectFn&&this._disconnectFn(),this.clearConnectionVars()},DriverWebBlueTooth.prototype.clearConnectionVars=function(){this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("clearConnectionVars "),this._device&&this._device.removeEventListener("ongattserverdisconnected",this.onDisconnected),this._device=null,this._server=null,this._disconnectFn=null,this._listenerMap={},this._listerCharacteristicMap={}},DriverWebBlueTooth.prototype.connect=function(device,disconnectFn){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("connect "),new Promise(function(resolve,reject){try{var newDevice=device._internalDevice;newDevice.addEventListener("gattserverdisconnected",_this.onDisconnected.bind(_this)),newDevice.ongattserverdisconnected=_this.onDisconnected.bind(_this),newDevice.gatt.connect().then(function(server){_this._device=newDevice,_this._server=server,_this._disconnectFn=disconnectFn,resolve()},reject)}catch(e){reject(e)}})},DriverWebBlueTooth.prototype.disconnect=function(){this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("disconnect "),this._server&&this._server.connected?this._server.disconnect():this.clearConnectionVars()},DriverWebBlueTooth.prototype.startScan=function(foundFn){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("startScan "),new Promise(function(resolve,reject){try{navigator.bluetooth.requestDevice({filters:[{services:_this._scanServices}],optionalServices:_this._scanOptionalServices}).then(function(device){foundFn({address:device.id,name:device.name,rssi:void 0!==device.adData&&device.adData.rssi?device.adData.rssi:0,_internalDevice:device})}).then(resolve,reject)}catch(e){reject(e)}})},DriverWebBlueTooth.prototype.stopScan=function(){return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("stopScan "),void 0!==navigator.bluetooth.cancelRequest?navigator.bluetooth.cancelRequest():new Promise(function(resolve,reject){resolve()})},DriverWebBlueTooth.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("writeCharacteristic "+characteristicUUID+" : "+data+" "),this._device&&this._device.gatt&&this._device.gatt.connected?new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).then(function(characteristic){return characteristic.writeValue(data.buffer)}).then(resolve).catch(function(e){reject(e),_this._device.gatt.connected||_this.onDisconnected(null)})}catch(e){reject(e)}}):(this.onDisconnected(null),Promise.reject("Not connected"))},DriverWebBlueTooth.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("readCharacteristic "+characteristicUUID+"  "),this._device&&this._device.gatt&&this._device.gatt.connected?new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).then(function(characteristic){return characteristic.readValue()}).then(function(data){_this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&_this._performanceMonitor.traceInfo("doReadCharacteristic "+characteristicUUID+" : "+ergometer.utils.typedArrayToHexString(data.buffer)+" "),resolve(data.buffer)}).catch(function(e){reject(e),_this._device.gatt.connected||_this.onDisconnected(null)})}catch(e){reject(e)}}):(this.onDisconnected(null),Promise.reject("Not connected"))},DriverWebBlueTooth.prototype.onCharacteristicValueChanged=function(event){this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("onCharacteristicValueChanged "+event.target.uuid+" : "+ergometer.utils.typedArrayToHexString(event.target.value.buffer)+" ");try{if(!this._device.gatt.connected)throw this.onDisconnected(null),"Not connected";var func=this._listenerMap[event.target.uuid];func&&func(event.target.value.buffer)}catch(e){if(!this._performanceMonitor)throw e;this._performanceMonitor.handleError(e.toString())}},DriverWebBlueTooth.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("enableNotification "+characteristicUUID+"  "),this._device.gatt.connected?new Promise(function(resolve,reject){try{_this.getCharacteristic(serviceUIID,characteristicUUID).then(function(characteristic){return characteristic.startNotifications().then(function(_){_this._listenerMap[characteristicUUID]=receive,(_this._listerCharacteristicMap[characteristicUUID]=characteristic).addEventListener("characteristicvaluechanged",_this.onCharacteristicValueChanged.bind(_this)),resolve()},reject)}).then(resolve,reject)}catch(e){reject(e)}}):(this.onDisconnected(null),Promise.reject("Not connected"))},DriverWebBlueTooth.prototype.disableNotification=function(serviceUIID,characteristicUUID){var _this=this;return this._performanceMonitor.logLevel==ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("disableNotification "+characteristicUUID+"  "),new Promise(function(resolve,reject){try{void 0!==_this._listenerMap[characteristicUUID]&&_this._listenerMap[characteristicUUID]?_this.getCharacteristic(serviceUIID,characteristicUUID).then(function(characteristic){characteristic.stopNotifications().then(function(){_this._listenerMap[characteristic.uuid]=null,_this._listerCharacteristicMap[characteristic.uuid]=null,characteristic.removeEventListener("characteristicvaluechanged",_this.onCharacteristicValueChanged),resolve()},reject)}):resolve()}catch(e){reject(e)}})},DriverWebBlueTooth}();ble.DriverWebBlueTooth=DriverWebBlueTooth}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(ergometer){!function(ble){var RecordingEventType;!function(RecordingEventType){RecordingEventType[RecordingEventType.startScan=0]="startScan",RecordingEventType[RecordingEventType.scanFoundFn=1]="scanFoundFn",RecordingEventType[RecordingEventType.stopScan=2]="stopScan",RecordingEventType[RecordingEventType.connect=3]="connect",RecordingEventType[RecordingEventType.disconnectFn=4]="disconnectFn",RecordingEventType[RecordingEventType.disconnect=5]="disconnect",RecordingEventType[RecordingEventType.writeCharacteristic=6]="writeCharacteristic",RecordingEventType[RecordingEventType.readCharacteristic=7]="readCharacteristic",RecordingEventType[RecordingEventType.enableNotification=8]="enableNotification",RecordingEventType[RecordingEventType.notificationReceived=9]="notificationReceived",RecordingEventType[RecordingEventType.disableNotification=10]="disableNotification"}(RecordingEventType=ble.RecordingEventType||(ble.RecordingEventType={}));var RecordingDriver=function(){function RecordingDriver(performanceMonitor,realDriver){this._events=[],this._performanceMonitor=performanceMonitor,this._realDriver=realDriver}return RecordingDriver.prototype.getRelativeTime=function(){return ergometer.utils.getTime()-this._startTime},RecordingDriver.prototype.addRecording=function(eventType,data){var newRec={timeStamp:this.getRelativeTime(),eventType:RecordingEventType[eventType]};return data&&(newRec.data=data),this._events.push(newRec),newRec},Object.defineProperty(RecordingDriver.prototype,"events",{get:function(){return this._events},set:function(value){this._events=value},enumerable:!0,configurable:!0}),RecordingDriver.prototype.clear=function(){this._events=[]},RecordingDriver.prototype.startRecording=function(){this.clear(),this._startTime=ergometer.utils.getTime()},RecordingDriver.prototype.recordResolveFunc=function(resolve,rec){var _this=this;return function(){rec.timeStampReturn=_this.getRelativeTime(),resolve()}},RecordingDriver.prototype.recordResolveBufferFunc=function(resolve,rec){var _this=this;return function(data){rec.timeStampReturn=_this.getRelativeTime(),rec.data.data=ergometer.utils.typedArrayToHexString(data),resolve(data)}},RecordingDriver.prototype.recordErrorFunc=function(reject,rec){var _this=this;return function(e){rec.timeStampReturn=_this.getRelativeTime(),rec.error=e,reject(e)}},RecordingDriver.prototype.startScan=function(foundFn){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.startScan);_this._realDriver.startScan(function(device){_this.addRecording(RecordingEventType.scanFoundFn,{address:device.address,name:device.name,rssi:device.rssi}),foundFn(device)}).then(_this.recordResolveFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver.prototype.stopScan=function(){this.addRecording(RecordingEventType.stopScan),this._realDriver.stopScan()},RecordingDriver.prototype.connect=function(device,disconnectFn){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.connect);_this._realDriver.connect(device,function(){_this.addRecording(RecordingEventType.disconnectFn),disconnectFn()}).then(_this.recordResolveFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver.prototype.disconnect=function(){this.addRecording(RecordingEventType.disconnect),this._realDriver.disconnect()},RecordingDriver.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.writeCharacteristic,{serviceUIID:serviceUIID,characteristicUUID:characteristicUUID,data:ergometer.utils.typedArrayToHexString(data.buffer)});_this._realDriver.writeCharacteristic(serviceUIID,characteristicUUID,data).then(_this.recordResolveFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.readCharacteristic,{serviceUIID:serviceUIID,characteristicUUID:characteristicUUID});_this._realDriver.readCharacteristic(serviceUIID,characteristicUUID).then(_this.recordResolveBufferFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.enableNotification,{serviceUIID:serviceUIID,characteristicUUID:characteristicUUID});_this._realDriver.enableNotification(serviceUIID,characteristicUUID,function(data){_this.addRecording(RecordingEventType.notificationReceived,{serviceUIID:serviceUIID,characteristicUUID:characteristicUUID,data:ergometer.utils.typedArrayToHexString(data)}),receive(data)}).then(_this.recordResolveFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver.prototype.disableNotification=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){var rec=_this.addRecording(RecordingEventType.disableNotification,{serviceUIID:serviceUIID,characteristicUUID:characteristicUUID});_this._realDriver.disableNotification(serviceUIID,characteristicUUID).then(_this.recordResolveFunc(resolve,rec),_this.recordErrorFunc(reject,rec))})},RecordingDriver}();ble.RecordingDriver=RecordingDriver}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(ergometer){!function(ble){var ReplayDriver=function(){function ReplayDriver(performanceMonitor,realDriver){this._events=[],this._eventCallBackMethods=[],this._eventCallbacks=[],this._playing=!1,this._eventIndex=0,this._checkQueueTimerId=null,this._performanceMonitor=performanceMonitor,this._realDriver=realDriver}return ReplayDriver.prototype.getRelativeTime=function(){return ergometer.utils.getTime()-this._startTime},Object.defineProperty(ReplayDriver.prototype,"events",{get:function(){return this._events},enumerable:!0,configurable:!0}),ReplayDriver.prototype.isCallBack=function(eventType){return eventType==ble.RecordingEventType.scanFoundFn||eventType==ble.RecordingEventType.disconnectFn||eventType==ble.RecordingEventType.notificationReceived},ReplayDriver.prototype.isSameEvent=function(event1,event2){var result=event1.eventType==event2.eventType;if(result&&ergometer.utils.isDefined(event1.data)&&ergometer.utils.isDefined(event2.data)&&event1.data&&event2.data){var data1=event1.data,data2=event2.data;result&&(ergometer.utils.isDefined(data1.serviceUIID)||ergometer.utils.isDefined(data2.serviceUIID))&&(result=data1.serviceUIID==data2.serviceUIID),result&&(ergometer.utils.isDefined(data1.characteristicUUID)||ergometer.utils.isDefined(data2.characteristicUUID))&&(result=data1.characteristicUUID==data2.characteristicUUID)}return result},ReplayDriver.prototype.runEvent=function(event,queuedEvent){if(this._performanceMonitor.logLevel>=ergometer.LogLevel.trace&&this._performanceMonitor.traceInfo("run event:"+JSON.stringify(event)),event.error)queuedEvent.reject(event.error);else{var data=null;if(event.data){data=event.data;var eventType=ble.RecordingEventType[event.eventType];eventType!=ble.RecordingEventType.readCharacteristic&&eventType!=ble.RecordingEventType.notificationReceived||(data=ergometer.utils.hexStringToTypedArray(data.data).buffer)}if(queuedEvent.resolve)try{data?queuedEvent.resolve(data):queuedEvent.resolve()}catch(e){this._performanceMonitor.handleError("Error: while replaying event"+e)}}},ReplayDriver.prototype.runTimedEvent=function(event,queuedEvent){var _this=this;setTimeout(function(){_this.runEvent(event,queuedEvent)},queuedEvent.timeStamp-event.timeStamp)},ReplayDriver.prototype.removeEvent=function(i){this._events.splice(i,1)},ReplayDriver.prototype.checkQueue=function(){for(var _this=this,keepChecking=!0;keepChecking&&0<this._events.length&&this._events[0].timeStamp<=this.getRelativeTime();){keepChecking=!1;var event=this._events[0];if(this.isCallBack(ble.RecordingEventType[event.eventType])){if(event.timeStamp<=this.getRelativeTime()){var found=!1;this._eventCallbacks.forEach(function(callbackEvent){_this.isSameEvent(event,callbackEvent)&&(_this.runEvent(event,callbackEvent),found=keepChecking=!0)}),found&&this.removeEvent(0)}}else if(0<this._eventCallBackMethods.length)for(var i=0;i<this._eventCallBackMethods.length;i++){var eventQueued=this._eventCallBackMethods[i];if(this.isSameEvent(eventQueued,event)){this._eventCallBackMethods.splice(i,1),this.removeEvent(0),keepChecking=!0,event.timeStamp<=eventQueued.timeStamp?this.runEvent(event,eventQueued):this.runTimedEvent(event,eventQueued);break}}}if(0<this._events.length){var event_1=this._events[0];this.timeNextCheck(event_1.timeStamp)}this.checkAllEventsProcessd()},ReplayDriver.prototype.checkAllEventsProcessd=function(){var allDone=0==this.events.length&&0==this._eventCallBackMethods.length;return allDone&&this.playing&&(this.playing=!1),allDone},ReplayDriver.prototype.timeNextCheck=function(timeStamp){var _this=this;this._checkQueueTimerId&&(window.clearTimeout(this._checkQueueTimerId),this._checkQueueTimerId=null);var duration=0;timeStamp&&0==(duration=this.getRelativeTime()-timeStamp)&&(duration=100),this._checkQueueTimerId=setTimeout(function(){_this.checkQueue()},duration)},ReplayDriver.prototype.addEvent=function(eventType,isMethod,resolve,reject,serviceUIID,characteristicUUID){var event={timeStamp:this.getRelativeTime(),eventType:ble.RecordingEventType[eventType]};if(resolve&&(event.resolve=resolve),reject&&(event.reject=reject),serviceUIID||characteristicUUID){var data={serviceUIID:serviceUIID,characteristicUUID:characteristicUUID};event.data=data}isMethod?this._eventCallBackMethods.push(event):(this._eventCallbacks.push(event),this.timeNextCheck())},ReplayDriver.prototype.replay=function(events){this._playing=!1,this._startTime=ergometer.utils.getTime(),this._events=events,this._eventIndex=0,this.playing=!0},Object.defineProperty(ReplayDriver.prototype,"playing",{get:function(){return this._playing},set:function(value){this._playing!=value&&((this._playing=value)||(this._eventCallBackMethods=[],this._eventCallbacks=[],this._performanceMonitor.disconnect()))},enumerable:!0,configurable:!0}),ReplayDriver.prototype.startScan=function(foundFn){var _this=this;return this.addEvent(ble.RecordingEventType.scanFoundFn,!1,foundFn),new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.startScan,!0,resolve,reject)})},ReplayDriver.prototype.stopScan=function(){this.addEvent(ble.RecordingEventType.stopScan,!0)},ReplayDriver.prototype.connect=function(device,disconnectFn){var _this=this;return this.addEvent(ble.RecordingEventType.disconnectFn,!1,disconnectFn),new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.connect,!0,resolve,reject)})},ReplayDriver.prototype.disconnect=function(){this.addEvent(ble.RecordingEventType.disconnect,!0)},ReplayDriver.prototype.writeCharacteristic=function(serviceUIID,characteristicUUID,data){var _this=this;return new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.writeCharacteristic,!0,resolve,reject,serviceUIID,characteristicUUID)})},ReplayDriver.prototype.readCharacteristic=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.readCharacteristic,!0,resolve,reject,serviceUIID,characteristicUUID)})},ReplayDriver.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){var _this=this;return this.addEvent(ble.RecordingEventType.notificationReceived,!1,receive,null,serviceUIID,characteristicUUID),new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.enableNotification,!0,resolve,reject,serviceUIID,characteristicUUID)})},ReplayDriver.prototype.disableNotification=function(serviceUIID,characteristicUUID){var _this=this;return new Promise(function(resolve,reject){_this.addEvent(ble.RecordingEventType.disableNotification,!0,resolve,reject,serviceUIID,characteristicUUID)})},ReplayDriver}();ble.ReplayDriver=ReplayDriver}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(ergometer){!function(ble){ble.PMDEVICE="ce060000-43e5-11e4-916c-0800200c9a66",ble.HEART_RATE_DEVICE_SERVICE="0000180d-0000-1000-8000-00805f9b34fb",ble.HEART_RATE_MEASUREMENT="00002a37-0000-1000-8000-00805f9b34fb",ble.PMDEVICE_INFO_SERVICE="ce060010-43e5-11e4-916c-0800200c9a66",ble.PMCONTROL_SERVICE="ce060020-43e5-11e4-916c-0800200c9a66",ble.PMROWING_SERVICE="ce060030-43e5-11e4-916c-0800200c9a66",ble.MODELNUMBER_CHARACTERISIC="ce060011-43e5-11e4-916c-0800200c9a66",ble.SERIALNUMBER_CHARACTERISTIC="ce060012-43e5-11e4-916c-0800200c9a66",ble.HWREVISION_CHARACTERISIC="ce060013-43e5-11e4-916c-0800200c9a66",ble.FWREVISION_CHARACTERISIC="ce060014-43e5-11e4-916c-0800200c9a66",ble.MANUFNAME_CHARACTERISIC="ce060015-43e5-11e4-916c-0800200c9a66",ble.MACHINETYPE_CHARACTERISIC="ce060016-43e5-11e4-916c-0800200c9a66",ble.TRANSMIT_TO_PM_CHARACTERISIC="ce060021-43e5-11e4-916c-0800200c9a66",ble.RECEIVE_FROM_PM_CHARACTERISIC="ce060022-43e5-11e4-916c-0800200c9a66",ble.ROWING_STATUS_CHARACTERISIC="ce060031-43e5-11e4-916c-0800200c9a66",ble.EXTRA_STATUS1_CHARACTERISIC="ce060032-43e5-11e4-916c-0800200c9a66",ble.EXTRA_STATUS2_CHARACTERISIC="ce060033-43e5-11e4-916c-0800200c9a66",ble.ROWING_STATUS_SAMPLE_RATE_CHARACTERISIC="ce060034-43e5-11e4-916c-0800200c9a66",ble.STROKE_DATA_CHARACTERISIC="ce060035-43e5-11e4-916c-0800200c9a66",ble.EXTRA_STROKE_DATA_CHARACTERISIC="ce060036-43e5-11e4-916c-0800200c9a66",ble.SPLIT_INTERVAL_DATA_CHARACTERISIC="ce060037-43e5-11e4-916c-0800200c9a66",ble.EXTRA_SPLIT_INTERVAL_DATA_CHARACTERISIC="ce060038-43e5-11e4-916c-0800200c9a66",ble.ROWING_SUMMARY_CHARACTERISIC="ce060039-43e5-11e4-916c-0800200c9a66",ble.EXTRA_ROWING_SUMMARY_CHARACTERISIC="ce06003a-43e5-11e4-916c-0800200c9a66",ble.HEART_RATE_BELT_INFO_CHARACTERISIC="ce06003b-43e5-11e4-916c-0800200c9a66",ble.MULTIPLEXED_INFO_CHARACTERISIC="ce060080-43e5-11e4-916c-0800200c9a66",ble.NOTIFICATION_DESCRIPTOR="00002902-0000-1000-8000-00805f9b34fb",ble.PACKET_SIZE=20}(ergometer.ble||(ergometer.ble={}))}(ergometer=ergometer||{}),function(ergometer){!function(usb){usb.USB_CSAVE_SIZE=120,usb.WRITE_BUF_SIZE=121,usb.REPORT_TYPE=2,usb.CONCEPT2_VENDOR_ID=6052}(ergometer.usb||(ergometer.usb={}))}(ergometer=ergometer||{}),function(ergometer){!function(usb){var DeviceNodeHid=function(){function DeviceNodeHid(deviceInfo){this._deviceInfo=deviceInfo}return DeviceNodeHid.prototype.callError=function(err){this._onError&&this._onError(err)},DeviceNodeHid.prototype.open=function(disconnect,error,receiveData){var _this=this;return this._hid=new nodehid.HID(this._deviceInfo.path),this._receiveData=receiveData,this._onError=error,this._hid.on("error",function(err){_this.callError(err)}),this._hid.readTimeout(500),this._disconnect=disconnect,this._deviceInfo.productId,Promise.resolve()},DeviceNodeHid.prototype.close=function(){return this._hid.close(),Promise.resolve()},DeviceNodeHid.prototype.sendData=function(data){var _this=this;return new Promise(function(resolve,reject){try{if(data.byteLength>usb.USB_CSAVE_SIZE)throw"Trying to send to much data, the buffer must be smaller or equal to "+usb.USB_CSAVE_SIZE+" and is "+data.byteLength;var buf=new ArrayBuffer(usb.WRITE_BUF_SIZE),view=new Int8Array(buf);view.set([usb.REPORT_TYPE],0),view.set(new Int8Array(data),1);var written=_this._hid.write(Array.from(view));if(written!=usb.WRITE_BUF_SIZE)throw"Only "+written+" bytes written to usb device. it should be "+usb.WRITE_BUF_SIZE;resolve(),_this.readData()}catch(error){_this.callError(error),reject(error)}})},DeviceNodeHid.prototype.readData=function(){var _this=this;try{this._hid.read(function(err,inputData){if(err)_this.callError(err);else if(inputData&&inputData.length==usb.WRITE_BUF_SIZE&&inputData[0]==usb.REPORT_TYPE){for(var endByte=usb.WRITE_BUF_SIZE-1;0<=endByte&&0==inputData[endByte];)endByte--;if(0<=endByte&&inputData[endByte]==ergometer.csafe.defs.FRAME_END_BYTE){var buf=new ArrayBuffer(usb.WRITE_BUF_SIZE),ar=new Int8Array(buf);ar.set(inputData,0);var view=new DataView(ar.buffer,1,endByte);_this._receiveData(view)}else _this.callError("end csafe frame not found")}else _this.callError("nothing read")})}catch(error){this.callError(error)}},DeviceNodeHid}();usb.DeviceNodeHid=DeviceNodeHid;var DriverNodeHid=function(){function DriverNodeHid(){}return DriverNodeHid.prototype.requestDevics=function(){try{var result=[];nodehid.devices().forEach(function(device){if(device.vendorId==usb.CONCEPT2_VENDOR_ID){var deviceInfo=new DeviceNodeHid(device);deviceInfo.serialNumber=device.serialNumber,deviceInfo.productId=device.productId,deviceInfo.vendorId=device.vendorId,deviceInfo.productName=device.product,result.push(deviceInfo)}})}catch(error){return Promise.reject(error)}return Promise.resolve(result)},DriverNodeHid}();usb.DriverNodeHid=DriverNodeHid}(ergometer.usb||(ergometer.usb={}))}(ergometer=ergometer||{}),function(ergometer){!function(usb){var DeviceWebHid=function(){function DeviceWebHid(deviceInfo){this._deviceInfo=deviceInfo}return DeviceWebHid.prototype.callError=function(err){this._onError&&this._onError(err)},DeviceWebHid.prototype.disconnected=function(device){device==this._deviceInfo&&(this.detachDisconnect(),this._disconnect&&this._disconnect())},DeviceWebHid.prototype.open=function(disconnect,error,receiveData){return this._deviceInfo.opened||(this._disconnect=disconnect,this._receiveData=receiveData,this._deviceInfo.oninputreport=this.receivedReport.bind(this),this._deviceInfo.productId),this._deviceInfo.open()},DeviceWebHid.prototype.detachDisconnect=function(){navigator.hid.removeEventListener("disconnect",this.disconnected)},DeviceWebHid.prototype.close=function(){return this.detachDisconnect(),this._deviceInfo.close()},DeviceWebHid.prototype.sendData=function(data){if(data.byteLength>usb.USB_CSAVE_SIZE)return Promise.reject("Trying to send to much data, the buffer must be smaller or equal to "+usb.USB_CSAVE_SIZE+" and is "+data.byteLength);var buf=new ArrayBuffer(usb.USB_CSAVE_SIZE);return new Int8Array(buf).set(new Int8Array(data),0),this._deviceInfo.sendReport(usb.REPORT_TYPE,buf)},DeviceWebHid.prototype.receivedReport=function(ev){var inputData=ev.data;if(inputData&&inputData.byteLength==usb.USB_CSAVE_SIZE){for(var endByte=usb.USB_CSAVE_SIZE-1;0<=endByte&&0==inputData.getUint8(endByte);)endByte--;if(0<=endByte&&inputData.getUint8(endByte)==ergometer.csafe.defs.FRAME_END_BYTE){var view=new DataView(inputData.buffer,0,endByte);this._receiveData(view)}else this.callError("end csafe frame not found")}else this.callError("nothing read")},DeviceWebHid}();usb.DeviceWebHid=DeviceWebHid;var DriverWebHid=function(){function DriverWebHid(){}return DriverWebHid.prototype.requestDevics=function(){return new Promise(function(resolve,reject){try{navigator.hid.requestDevice({filters:[{vendorId:usb.CONCEPT2_VENDOR_ID}]}).then(function(devices){if(0<devices.length){var device=devices[0],deviceInfo=new DeviceWebHid(device);deviceInfo.productId=device.productId,deviceInfo.vendorId=device.vendorId,deviceInfo.productName=device.productName,resolve([deviceInfo])}else reject("device not found")}).catch(reject)}catch(error){return Promise.reject(error)}})},DriverWebHid}();usb.DriverWebHid=DriverWebHid}(ergometer.usb||(ergometer.usb={}))}(ergometer=ergometer||{}),function(ergometer){!function(usb){var DeviceCordovaHid=function(){function DeviceCordovaHid(device){this._device=device}return DeviceCordovaHid.prototype.callError=function(err){this._onError&&this._onError(err)},DeviceCordovaHid.prototype.disconnected=function(device){this._disconnect&&this._disconnect()},DeviceCordovaHid.prototype.open=function(disconnect,error,receiveData){var _this=this;return this._disconnect=disconnect,this._receiveData=receiveData,new Promise(function(resolve,reject){cordova.plugins.UsbHid.requestPermission(_this._device).then(function(){return cordova.plugins.UsbHid.open({packetSize:usb.WRITE_BUF_SIZE,timeout:1e3,skippFirstByteZero:!0})}).then(resolve,reject)})},DeviceCordovaHid.prototype.close=function(){return cordova.plugins.UsbHid.close()},DeviceCordovaHid.prototype.sendData=function(data){var _this=this;return data.byteLength>usb.USB_CSAVE_SIZE?Promise.reject("Trying to send to much data, the buffer must be smaller or equal to "+usb.USB_CSAVE_SIZE+" and is "+data.byteLength):new Promise(function(resolve,reject){try{var buf=new ArrayBuffer(usb.WRITE_BUF_SIZE),view=new Int8Array(buf);view.set([usb.REPORT_TYPE],0),view.set(new Int8Array(data),1),cordova.plugins.UsbHid.writeRead(buf).then(function(data){resolve(),setTimeout(function(){if(data&&data.byteLength==usb.WRITE_BUF_SIZE){for(var inputData=new DataView(data),endByte=usb.WRITE_BUF_SIZE-1;1<=endByte&&0==inputData.getUint8(endByte);)endByte--;if(1<=endByte&&inputData.getUint8(endByte)==ergometer.csafe.defs.FRAME_END_BYTE){var view=new DataView(inputData.buffer,1,endByte);_this._receiveData(view)}else _this.callError("end csafe frame not found")}})}).catch(reject)}catch(e){reject(e)}})},DeviceCordovaHid}();usb.DeviceCordovaHid=DeviceCordovaHid;var DriverCordovaHid=function(){function DriverCordovaHid(){}return DriverCordovaHid.prototype.requestDevics=function(){return new Promise(function(resolve,reject){try{cordova.plugins.UsbHid.enumerateDevices().then(function(cordovaDevices){var result=[];cordovaDevices.forEach(function(device){if(device.vendorId==usb.CONCEPT2_VENDOR_ID.toString()){var deviceInfo=new DeviceCordovaHid(device);deviceInfo.serialNumber=device.serialNumber,deviceInfo.productId=parseInt(device.productId),deviceInfo.vendorId=parseInt(device.vendorId),deviceInfo.productName=device.productName,result.push(deviceInfo)}}),resolve(result)},reject)}catch(e){reject(e)}})},DriverCordovaHid}();usb.DriverCordovaHid=DriverCordovaHid}(ergometer.usb||(ergometer.usb={}))}(ergometer=ergometer||{}),function(ergometer){!function(csafe){!function(defs){defs.EXT_FRAME_START_BYTE=240,defs.FRAME_START_BYTE=241,defs.FRAME_END_BYTE=242,defs.FRAME_STUFF_BYTE=243,defs.FRAME_MAX_STUFF_OFFSET_BYTE=3,defs.FRAME_FLG_LEN=2,defs.EXT_FRAME_ADDR_LEN=2,defs.FRAME_CHKSUM_LEN=1,defs.SHORT_CMD_TYPE_MSK=128,defs.LONG_CMD_HDR_LENGTH=2,defs.LONG_CMD_BYTE_CNT_OFFSET=1,defs.RSP_HDR_LENGTH=2,defs.FRAME_STD_TYPE=0,defs.FRAME_EXT_TYPE=1,defs.DESTINATION_ADDR_HOST=0,defs.DESTINATION_ADDR_ERG_MASTER=1,defs.DESTINATION_ADDR_BROADCAST=255,defs.DESTINATION_ADDR_ERG_DEFAULT=253,defs.FRAME_MAXSIZE=96,defs.INTERFRAMEGAP_MIN=50,defs.CMDUPLIST_MAXSIZE=10,defs.MEMORY_BLOCKSIZE=64,defs.FORCEPLOT_BLOCKSIZE=32,defs.HEARTBEAT_BLOCKSIZE=32,defs.MANUFACTURE_ID=22,defs.CLASS_ID=2,defs.MODEL_NUM=5,defs.UNITS_TYPE=0,defs.SERIALNUM_DIGITS=9,defs.HMS_FORMAT_CNT=3,defs.YMD_FORMAT_CNT=3,defs.ERRORCODE_FORMAT_CNT=3,defs.CTRL_CMD_LONG_MIN=1,defs.CFG_CMD_LONG_MIN=16,defs.DATA_CMD_LONG_MIN=32,defs.AUDIO_CMD_LONG_MIN=64,defs.TEXTCFG_CMD_LONG_MIN=96,defs.TEXTSTATUS_CMD_LONG_MIN=101,defs.CAP_CMD_LONG_MIN=112,defs.PMPROPRIETARY_CMD_LONG_MIN=118,defs.CTRL_CMD_SHORT_MIN=128,defs.STATUS_CMD_SHORT_MIN=145,defs.DATA_CMD_SHORT_MIN=160,defs.AUDIO_CMD_SHORT_MIN=192,defs.TEXTCFG_CMD_SHORT_MIN=224,defs.TEXTSTATUS_CMD_SHORT_MIN=229,defs.GETPMCFG_CMD_SHORT_MIN=128,defs.GETPMCFG_CMD_LONG_MIN=80,defs.SETPMCFG_CMD_SHORT_MIN=224,defs.SETPMCFG_CMD_LONG_MIN=0,defs.GETPMDATA_CMD_SHORT_MIN=160,defs.GETPMDATA_CMD_LONG_MIN=104,defs.SETPMDATA_CMD_SHORT_MIN=208,defs.SETPMDATA_CMD_LONG_MIN=48,defs.PREVOK_FLG=0,defs.PREVREJECT_FLG=16,defs.PREVBAD_FLG=32,defs.PREVNOTRDY_FLG=48,defs.PREVFRAMESTATUS_MSK=48,defs.SLAVESTATE_ERR_FLG=0,defs.SLAVESTATE_RDY_FLG=1,defs.SLAVESTATE_IDLE_FLG=2,defs.SLAVESTATE_HAVEID_FLG=3,defs.SLAVESTATE_INUSE_FLG=5,defs.SLAVESTATE_PAUSE_FLG=6,defs.SLAVESTATE_FINISH_FLG=7,defs.SLAVESTATE_MANUAL_FLG=8,defs.SLAVESTATE_OFFLINE_FLG=9,defs.FRAMECNT_FLG=128,defs.SLAVESTATE_MSK=15,defs.AUTOSTATUS_FLG=1,defs.UPSTATUS_FLG=2,defs.UPLIST_FLG=4,defs.ACK_FLG=16,defs.EXTERNCONTROL_FLG=64,defs.CAPCODE_PROTOCOL=0,defs.CAPCODE_POWER=1,defs.CAPCODE_TEXT=2,defs.DISTANCE_MILE_0_0=1,defs.DISTANCE_MILE_0_1=2,defs.DISTANCE_MILE_0_2=3,defs.DISTANCE_MILE_0_3=4,defs.DISTANCE_FEET_0_0=5,defs.DISTANCE_INCH_0_0=6,defs.WEIGHT_LBS_0_0=7,defs.WEIGHT_LBS_0_1=8,defs.DISTANCE_FEET_1_0=10,defs.SPEED_MILEPERHOUR_0_0=16,defs.SPEED_MILEPERHOUR_0_1=17,defs.SPEED_MILEPERHOUR_0_2=18,defs.SPEED_FEETPERMINUTE_0_0=19,defs.DISTANCE_KM_0_0=33,defs.DISTANCE_KM_0_1=34,defs.DISTANCE_KM_0_2=35,defs.DISTANCE_METER_0_0=36,defs.DISTANCE_METER_0_1=37,defs.DISTANCE_CM_0_0=38,defs.WEIGHT_KG_0_0=39,defs.WEIGHT_KG_0_1=40,defs.SPEED_KMPERHOUR_0_0=48,defs.SPEED_KMPERHOUR_0_1=49,defs.SPEED_KMPERHOUR_0_2=50,defs.SPEED_METERPERMINUTE_0_0=51,defs.PACE_MINUTEPERMILE_0_0=55,defs.PACE_MINUTEPERKM_0_0=56,defs.PACE_SECONDSPERKM_0_0=57,defs.PACE_SECONDSPERMILE_0_0=58,defs.DISTANCE_FLOORS_0_0=65,defs.DISTANCE_FLOORS_0_1=66,defs.DISTANCE_STEPS_0_0=67,defs.DISTANCE_REVS_0_0=68,defs.DISTANCE_STRIDES_0_0=69,defs.DISTANCE_STROKES_0_0=70,defs.MISC_BEATS_0_0=71,defs.ENERGY_CALORIES_0_0=72,defs.GRADE_PERCENT_0_0=74,defs.GRADE_PERCENT_0_2=75,defs.GRADE_PERCENT_0_1=76,defs.CADENCE_FLOORSPERMINUTE_0_1=79,defs.CADENCE_FLOORSPERMINUTE_0_0=80,defs.CADENCE_STEPSPERMINUTE_0_0=81,defs.CADENCE_REVSPERMINUTE_0_0=82,defs.CADENCE_STRIDESPERMINUTE_0_0=83,defs.CADENCE_STROKESPERMINUTE_0_0=84,defs.MISC_BEATSPERMINUTE_0_0=85,defs.BURN_CALORIESPERMINUTE_0_0=86,defs.BURN_CALORIESPERHOUR_0_0=87,defs.POWER_WATTS_0_0=88,defs.ENERGY_INCHLB_0_0=90,defs.ENERGY_FOOTLB_0_0=91,defs.ENERGY_NM_0_0=92,defs.KG_TO_LBS=2.2046,defs.LBS_TO_KG=1/defs.KG_TO_LBS,defs.IDDIGITS_MIN=2,defs.IDDIGITS_MAX=5,defs.DEFAULT_IDDIGITS=5,defs.DEFAULT_ID=0,defs.MANUAL_ID=999999999,defs.DEFAULT_SLAVESTATE_TIMEOUT=20,defs.PAUSED_SLAVESTATE_TIMEOUT=220,defs.INUSE_SLAVESTATE_TIMEOUT=6,defs.IDLE_SLAVESTATE_TIMEOUT=30,defs.BASE_YEAR=1900,defs.DEFAULT_STATUSUPDATE_INTERVAL=256,defs.DEFAULT_CMDUPLIST_INTERVAL=256}(csafe.defs||(csafe.defs={}))}(ergometer.csafe||(ergometer.csafe={}))}(ergometer=ergometer||{}),function(ergometer){!function(csafe){var CommandManagager=function(){function CommandManagager(){this._commands=[]}return CommandManagager.prototype.register=function(createCommand){this._commands.push(createCommand)},CommandManagager.prototype.apply=function(buffer,monitor){this._commands.forEach(function(command){command(buffer,monitor)})},CommandManagager}();csafe.CommandManagager=CommandManagager,csafe.commandManager=new CommandManagager,csafe.registerStandardSet=function(functionName,command,setParams){csafe.commandManager.register(function(buffer,monitor){buffer[functionName]=function(params){return buffer.addRawCommand({waitForResponse:!1,command:command,data:setParams(params),onError:params.onError}),buffer}})},csafe.registerStandardSetConfig=function(functionName,command,setParams){csafe.commandManager.register(function(buffer,monitor){buffer[functionName]=function(params){return buffer.addRawCommand({waitForResponse:!1,command:26,detailCommand:command,data:setParams(params),onError:params.onError}),buffer}})},csafe.registerStandardShortGet=function(functionName,command,converter){csafe.commandManager.register(function(buffer,monitor){buffer[functionName]=function(params){return buffer.addRawCommand({waitForResponse:!0,command:command,onDataReceived:function(data){params.onDataReceived(converter(data))},onError:params.onError}),buffer}})},csafe.registerStandardLongGet=function(functionName,detailCommand,converter){csafe.commandManager.register(function(buffer,monitor){buffer[functionName]=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:detailCommand,onDataReceived:function(data){params.onDataReceived(converter(data))},onError:params.onError}),buffer}})}}(ergometer.csafe||(ergometer.csafe={}))}(ergometer=ergometer||{}),function(ergometer){!function(csafe){csafe.commandManager.register(function(buffer,monitor){buffer.getStrokeState=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:191,onDataReceived:function(data){params.onDataReceived&&params.onDataReceived(data.getUint8(0))},onError:params.onError}),buffer}}),csafe.commandManager.register(function(buffer,monitor){buffer.getDragFactor=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:193,onDataReceived:function(data){params.onDataReceived&&params.onDataReceived(data.getUint8(0))},onError:params.onError}),buffer}}),csafe.commandManager.register(function(buffer,monitor){buffer.getWorkDistance=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:163,onDataReceived:function(data){if(params.onDataReceived){var workDistance=(data.getUint8(0)+(data.getUint8(1)<<8)+(data.getUint8(2)<<16)+(data.getUint8(3)<<24))/10+data.getUint8(4)/10;params.onDataReceived(workDistance)}},onError:params.onError}),buffer}}),csafe.commandManager.register(function(buffer,monitor){buffer.getWorkTime=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:160,onDataReceived:function(data){if(params.onDataReceived){var workTimeMs=1e3*((data.getUint8(0)+(data.getUint8(1)<<8)+(data.getUint8(2)<<16)+(data.getUint8(3)<<24))/100+data.getUint8(4)/100);params.onDataReceived(workTimeMs)}},onError:params.onError}),buffer}});var receivePowerCurvePart=[],currentPowerCurve=[],peekValue=0;csafe.commandManager.register(function(buffer,monitor){buffer.getPowerCurve=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:107,data:[20],onError:params.onError,onDataReceived:function(data){if(params.onDataReceived){var bytesReturned=data.getUint8(0);monitor.traceInfo("received power curve count "+bytesReturned);var endFound=!1;if(0<bytesReturned){var value=0,lastValue=0;0<receivePowerCurvePart.length&&(lastValue=receivePowerCurvePart[receivePowerCurvePart.length-1]);for(var i=1;i<bytesReturned+1;i+=2)value=data.getUint16(i,!0),20<receivePowerCurvePart.length&&lastValue<peekValue/4&&lastValue<value&&(monitor.traceInfo("Curve:"+JSON.stringify(currentPowerCurve)),currentPowerCurve=receivePowerCurvePart,receivePowerCurvePart=[],peekValue=0,params.onDataReceived&&4<currentPowerCurve.length&&params.onDataReceived(currentPowerCurve)),receivePowerCurvePart.push(value),peekValue<value&&(peekValue=value),lastValue=value;10<receivePowerCurvePart.length&&0===value&&(endFound=!0),endFound||(monitor.traceInfo("received part :"+JSON.stringify(receivePowerCurvePart)),monitor.newCsafeBuffer().getPowerCurve({onDataReceived:params.onDataReceived}).send())}else endFound=!0;endFound&&(peekValue=0,currentPowerCurve=receivePowerCurvePart,receivePowerCurvePart=[],monitor.traceInfo("Curve:"+JSON.stringify(currentPowerCurve)),params.onDataReceived&&4<currentPowerCurve.length&&params.onDataReceived(currentPowerCurve))}}}),buffer}}),csafe.commandManager.register(function(buffer,monitor){buffer.getStrokeStats=function(params){return buffer.addRawCommand({waitForResponse:!0,command:26,detailCommand:110,data:[],onError:params.onError,onDataReceived:function(data){if(params.onDataReceived&&3<=data.byteLength){var driveTime=data.getUint8(0),strokeRecoveryTime=data.getUint8(1)+256*data.getUint8(2);params.onDataReceived(driveTime,strokeRecoveryTime)}}}),buffer}}),csafe.registerStandardLongGet("getWorkoutType",137,function(data){return data.getUint8(0)}),csafe.registerStandardLongGet("getWorkoutState",141,function(data){return data.getUint8(0)}),csafe.registerStandardLongGet("getWorkoutIntervalCount",159,function(data){return data.getUint8(0)}),csafe.registerStandardLongGet("getWorkoutIntervalType",142,function(data){return data.getUint8(0)}),csafe.registerStandardLongGet("getWorkoutIntervalRestTime",207,function(data){return data.getUint16(0,!0)}),csafe.registerStandardLongGet("getWork",160,function(data){return 1e3*(60*data.getUint8(0)*60+60*data.getUint8(1)+data.getUint8(2))}),csafe.registerStandardSet("setProgram",36,function(params){return[ergometer.utils.getByte(params.value,0),0]}),csafe.registerStandardSet("setTime",17,function(params){return[params.hour,params.minute,params.second]}),csafe.registerStandardSet("setDate",18,function(params){return[ergometer.utils.getByte(params.year,0),params.month,params.day]}),csafe.registerStandardSet("setTimeout",19,function(params){return[params.value]}),csafe.registerStandardSet("setWork",32,function(params){return[params.hour,params.minute,params.second]}),csafe.registerStandardSet("setDistance",33,function(params){return[ergometer.utils.getByte(params.value,0),ergometer.utils.getByte(params.value,1),params.unit]}),csafe.registerStandardSet("setTotalCalories",35,function(params){return[ergometer.utils.getByte(params.value,0),ergometer.utils.getByte(params.value,1)]}),csafe.registerStandardSet("setPower",52,function(params){return[ergometer.utils.getByte(params.value,0),ergometer.utils.getByte(params.value,1),params.unit]})}(ergometer.csafe||(ergometer.csafe={}))}(ergometer=ergometer||{}),function(ergometer){!function(csafe){csafe.commandManager.register(function(buffer,monitor){buffer.getVersion=function(params){return buffer.addRawCommand({waitForResponse:!0,command:145,onDataReceived:function(data){params.onDataReceived&&params.onDataReceived({ManufacturerId:data.getUint8(0),CID:data.getUint8(1),Model:data.getUint8(2),HardwareVersion:data.getUint16(3,!0),FirmwareVersion:data.getUint16(5,!0)})},onError:params.onError}),buffer}}),csafe.registerStandardShortGet("getDistance",161,function(data){return{value:data.getUint16(0,!0),unit:data.getUint8(2)}}),csafe.registerStandardShortGet("getPace",166,function(data){return data.getUint16(0,!0)}),csafe.registerStandardShortGet("getPower",180,function(data){return data.getUint16(0,!0)}),csafe.registerStandardShortGet("getCadence",167,function(data){return data.getUint16(0,!0)}),csafe.registerStandardShortGet("getHorizontal",161,function(data){return data.getUint16(0,!0)}),csafe.registerStandardShortGet("getCalories",163,function(data){return data.getUint16(0,!0)}),csafe.registerStandardShortGet("getHeartRate",176,function(data){return data.getUint8(0)})}(ergometer.csafe||(ergometer.csafe={}))}(ergometer=ergometer||{}),function(ergometer){!function(csafe){csafe.registerStandardSetConfig("setWorkoutType",1,function(params){return[params.value]})}(ergometer.csafe||(ergometer.csafe={}))}(ergometer=ergometer||{}),function(ergometer){var WaitResponseBuffer=function(){function WaitResponseBuffer(monitor,resolve,reject,commands,timeOut){var _this=this;this.command=0,this.commandDataIndex=0,this.frameState=0,this.nextDataLength=0,this.detailCommand=0,this.statusByte=0,this.monitorStatus=0,this.prevFrameState=0,this.calcCheck=0,this._commands=[],this.stuffByteActive=!1,this._monitor=monitor,this._resolve=resolve,this._reject=reject,this._timeOutHandle=setTimeout(this.timeOut.bind(this),timeOut),commands.forEach(function(command){command.waitForResponse&&_this._commands.push(command)})}return Object.defineProperty(WaitResponseBuffer.prototype,"commands",{get:function(){return this._commands},enumerable:!0,configurable:!0}),WaitResponseBuffer.prototype.removeRemainingCommands=function(){var _this=this;this._commands.forEach(function(command){_this._monitor.logLevel>=ergometer.LogLevel.error&&_this._monitor.handleError("command removed without result command="+command.command+" detial= "+command.detailCommand),command.onError&&command.onError("command removed without result")}),this._commands=[]},WaitResponseBuffer.prototype.timeOut=function(){this.removeRemainingCommands(),this.remove(),this._reject&&this._reject("Time out buffer"),this._monitor.logLevel>=ergometer.LogLevel.error&&this._monitor.handleError("buffer time out")},WaitResponseBuffer.prototype.remove=function(){this._timeOutHandle&&(clearTimeout(this._timeOutHandle),this._timeOutHandle=null),this._monitor.removeResponseBuffer(this)},WaitResponseBuffer.prototype.processedBuffer=function(){this.removeRemainingCommands(),this.remove(),this._resolve&&this._resolve()},WaitResponseBuffer.prototype.removedWithError=function(e){this._commands.forEach(function(command){command.onError&&command.onError(e)}),this._reject&&this._reject(e)},WaitResponseBuffer.prototype.receivedCSaveCommand=function(parsed){this._monitor.logLevel==ergometer.LogLevel.trace&&this._monitor.traceInfo("received command:"+JSON.stringify(parsed));for(var i=0;i<this._commands.length;i++){var command=this._commands[i];if(command.command==parsed.command&&(command.detailCommand==parsed.detailCommand||!command.detailCommand&&!parsed.detailCommand)){if(command.onDataReceived){var dataView=new DataView(parsed.data.buffer);this._monitor.traceInfo("call received"),command.responseBuffer=this,command.onDataReceived(dataView)}this._commands.splice(i,1);break}}},WaitResponseBuffer}();ergometer.WaitResponseBuffer=WaitResponseBuffer;var PerformanceMonitorBase=function(_super){function PerformanceMonitorBase(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._waitResonseBuffers=[],_this._checksumCheckEnabled=!1,_this.sortCommands=!1,_this._sendBufferQueue=[],_this}return __extends(PerformanceMonitorBase,_super),PerformanceMonitorBase.prototype.initialize=function(){this._powerCurveEvent=new ergometer.pubSub.Event,this._powerCurveEvent.registerChangedEvent(this.enableDisableNotification.bind(this)),this._splitCommandsWhenToBig=!1,this._receivePartialBuffers=!1,this._commandTimeout=1e3},PerformanceMonitorBase.prototype.removeResponseBuffer=function(buffer){var i=this._waitResonseBuffers.indexOf(buffer);0<=i&&this._waitResonseBuffers.splice(i,1)},PerformanceMonitorBase.prototype.enableDisableNotification=function(){return Promise.resolve()},Object.defineProperty(PerformanceMonitorBase.prototype,"powerCurveEvent",{get:function(){return this._powerCurveEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBase.prototype,"powerCurve",{get:function(){return this._powerCurve},enumerable:!0,configurable:!0}),PerformanceMonitorBase.prototype.clearAllBuffers=function(){this.clearWaitResponseBuffers(),this._sendBufferQueue=[]},PerformanceMonitorBase.prototype.beforeConnected=function(){this.clearAllBuffers()},PerformanceMonitorBase.prototype.clearWaitResponseBuffers=function(){this._waitResonseBuffers.forEach(function(b){return b.remove()}),this._waitResonseBuffers=[]},PerformanceMonitorBase.prototype.driver_write=function(data){return Promise.reject("not implemented")},PerformanceMonitorBase.prototype.sendCSafeBuffer=function(csafeBuffer){var _this=this;return new Promise(function(resolve,reject){var rawCommandBuffer=csafeBuffer.rawCommands,commandArray=[],prevCommand=-1,prevCommandIndex=-1;_this.sortCommands&&rawCommandBuffer.sort(function(first,next){return first.command-next.command}),rawCommandBuffer.forEach(function(command){var commandMerged=!1,commandIndex=commandArray.length;if(command.command>=ergometer.csafe.defs.CTRL_CMD_SHORT_MIN){if(commandArray.push(command.command),command.detailCommand||command.data)throw"short commands can not contain data or a detail command"}else{if(command.detailCommand){if(prevCommand===command.command){var dataLength=1;command.data&&0<command.data.length&&(dataLength+=command.data.length),commandArray[prevCommandIndex+1]+=dataLength,commandMerged=!0}else{commandArray.push(command.command);dataLength=1;command.data&&0<command.data.length&&(dataLength+=command.data.length+1),commandArray.push(dataLength)}commandArray.push(command.detailCommand)}else commandArray.push(command.command);command.data&&0<command.data.length&&(commandArray.push(command.data.length),commandArray=commandArray.concat(command.data))}commandMerged||(prevCommand=command.command,prevCommandIndex=commandIndex)}),_this._sendBufferQueue.push({commandArray:commandArray,resolve:resolve,reject:reject,rawCommandBuffer:rawCommandBuffer}),_this.checkSendBuffer()})},PerformanceMonitorBase.prototype.checkSendBufferAtEnd=function(){0<this._sendBufferQueue.length&&setTimeout(this.checkSendBuffer.bind(this),0)},PerformanceMonitorBase.prototype.checkSendBuffer=function(){if(0==this._waitResonseBuffers.length&&0<this._sendBufferQueue.length){var sendData=this._sendBufferQueue.shift();this.sendBufferFromQueue(sendData)}},PerformanceMonitorBase.prototype.sendBufferFromQueue=function(sendData){var _this=this,waitBuffer=new WaitResponseBuffer(this,function(){sendData.resolve&&sendData.resolve(),_this.checkSendBufferAtEnd()},function(err){sendData.reject&&sendData.reject(err),_this.checkSendBufferAtEnd()},sendData.rawCommandBuffer,this._commandTimeout);this._waitResonseBuffers.push(waitBuffer),this.sendCsafeCommands(sendData.commandArray).catch(function(e){_this.removeResponseBuffer(waitBuffer),waitBuffer.removedWithError(e),_this.checkSendBufferAtEnd()})},PerformanceMonitorBase.prototype.sendCsafeCommands=function(byteArray){var _this=this;return new Promise(function(resolve,reject){if(byteArray&&0<byteArray.length){for(var checksum=0,i=0;i<byteArray.length;i++)checksum^=byteArray[i];var newArray=[];for(i=0;i<byteArray.length;i++){var value=byteArray[i];240<=value&&value<=243?(newArray.push(243),newArray.push(value-240),_this.logLevel==ergometer.LogLevel.trace&&_this.traceInfo("stuffed to byte:"+value)):newArray.push(value)}var bytesToSend=[ergometer.csafe.defs.FRAME_START_BYTE].concat(byteArray).concat([checksum,ergometer.csafe.defs.FRAME_END_BYTE]);if(_this._splitCommandsWhenToBig&&bytesToSend.length>_this.getPacketSize())reject("Csafe commands with length "+bytesToSend.length+" does not fit into buffer with size "+_this.getPacketSize()+" ");else for(var sendBytesIndex=0;sendBytesIndex<bytesToSend.length;){for(var bufferLength=Math.min(_this.getPacketSize(),bytesToSend.length-sendBytesIndex),buffer=new ArrayBuffer(bufferLength),dataView=new DataView(buffer),bufferIndex=0;bufferIndex<bufferLength;)dataView.setUint8(bufferIndex,bytesToSend[sendBytesIndex]),sendBytesIndex++,bufferIndex++;_this.logLevel==ergometer.LogLevel.trace&&_this.traceInfo("send csafe: "+ergometer.utils.typedArrayToHexString(buffer)),_this.driver_write(dataView).then(function(){_this.traceInfo("csafe command send"),sendBytesIndex>=bytesToSend.length&&resolve()}).catch(function(e){sendBytesIndex=bytesToSend.length,reject(e)})}}else resolve()})},PerformanceMonitorBase.prototype.moveToNextBuffer=function(){var result=null;this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("next buffer: count="+this._waitResonseBuffers.length),0<this._waitResonseBuffers.length&&this._waitResonseBuffers[0].processedBuffer();return 0<this._waitResonseBuffers.length&&(result=this._waitResonseBuffers[0]),result},PerformanceMonitorBase.prototype.handeReceivedDriverData=function(dataView){if(0<this._waitResonseBuffers.length&&(1!=dataView.byteLength||0!=dataView.getUint8(0))){var waitBuffer=this._waitResonseBuffers[0];this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("continious receive csafe: "+ergometer.utils.typedArrayToHexString(dataView.buffer));for(var i=0,moveToNextBuffer=!1;i<dataView.byteLength&&!moveToNextBuffer;){var currentByte=dataView.getUint8(i);if(waitBuffer.stuffByteActive&&currentByte<=3?(currentByte=240+currentByte,this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("unstuffed to byte:"+currentByte),waitBuffer.stuffByteActive=!1):(waitBuffer.stuffByteActive=243==currentByte,waitBuffer.stuffByteActive&&this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("start stuff byte")),!waitBuffer.stuffByteActive)switch(0!=waitBuffer.frameState&&(waitBuffer.calcCheck=waitBuffer.calcCheck^currentByte),this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("parse: "+i+": "+ergometer.utils.toHexString(currentByte,1)+" state: "+waitBuffer.frameState+" checksum:"+ergometer.utils.toHexString(waitBuffer.calcCheck,1)+" "),waitBuffer.frameState){case 0:currentByte!=ergometer.csafe.defs.FRAME_START_BYTE?(moveToNextBuffer=!0,this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("stop byte "+ergometer.utils.toHexString(currentByte,1))):waitBuffer.frameState=1,waitBuffer.calcCheck=0;break;case 1:waitBuffer.frameState=2,waitBuffer.statusByte=currentByte,waitBuffer.monitorStatus=currentByte&ergometer.csafe.defs.SLAVESTATE_MSK,waitBuffer.prevFrameState=(currentByte&ergometer.csafe.defs.PREVFRAMESTATUS_MSK)>>4,this.logLevel==ergometer.LogLevel.trace&&this.traceInfo("monitor status: "+waitBuffer.monitorStatus+",prev frame state: "+waitBuffer.prevFrameState),waitBuffer._responseState=currentByte;break;case 2:waitBuffer.command=currentByte,waitBuffer.frameState=3;break;case 3:if(waitBuffer.statusByte==waitBuffer.command&&currentByte==ergometer.csafe.defs.FRAME_END_BYTE)moveToNextBuffer=!(waitBuffer.command=0);else if(i==dataView.byteLength-1&&currentByte==ergometer.csafe.defs.FRAME_END_BYTE){var checksum=waitBuffer.command;waitBuffer.calcCheck=waitBuffer.calcCheck^currentByte,waitBuffer.calcCheck=waitBuffer.calcCheck^waitBuffer.command,this._checksumCheckEnabled&&checksum!=waitBuffer.calcCheck&&this.handleError("Wrong checksum "+ergometer.utils.toHexString(checksum,1)+" expected "+ergometer.utils.toHexString(waitBuffer.calcCheck,1)+" "),moveToNextBuffer=!(waitBuffer.command=0)}else i<dataView.byteLength&&(waitBuffer.endCommand=i+currentByte,waitBuffer.nextDataLength=currentByte,waitBuffer.command>=ergometer.csafe.defs.CTRL_CMD_SHORT_MIN?waitBuffer.frameState=6:waitBuffer.frameState=4);break;case 4:waitBuffer.detailCommand=currentByte,waitBuffer.frameState=5;break;case 5:waitBuffer.nextDataLength=currentByte,waitBuffer.frameState=6;break;case 6:if(waitBuffer.commandData||(waitBuffer.commandDataIndex=0,waitBuffer.commandData=new Uint8Array(waitBuffer.nextDataLength)),waitBuffer.commandData[waitBuffer.commandDataIndex]=currentByte,waitBuffer.nextDataLength--,waitBuffer.commandDataIndex++,0==waitBuffer.nextDataLength){waitBuffer.command<ergometer.csafe.defs.CTRL_CMD_SHORT_MIN&&i<waitBuffer.endCommand?waitBuffer.frameState=4:waitBuffer.frameState=2;try{waitBuffer.receivedCSaveCommand({command:waitBuffer.command,detailCommand:waitBuffer.detailCommand,data:waitBuffer.commandData})}catch(e){this.handleError(e)}waitBuffer.commandData=null,waitBuffer.detailCommand=0}}i++}this._receivePartialBuffers?moveToNextBuffer?waitBuffer=this.moveToNextBuffer():dataView.byteLength!=this.getPacketSize()&&waitBuffer&&0!=waitBuffer.frameState&&(waitBuffer=this.moveToNextBuffer(),this.handleError("wrong csafe frame ending.")):waitBuffer=this.moveToNextBuffer()}},PerformanceMonitorBase.prototype.getPacketSize=function(){throw"getPacketSize not implemented"},PerformanceMonitorBase.prototype.newCsafeBuffer=function(){var _this=this,csafeBuffer={rawCommands:[],send:function(sucess,error){return _this.sendCSafeBuffer(csafeBuffer).then(sucess).catch(function(e){return _this.handleError(e),error&&error(e),Promise.reject(e)})},addRawCommand:function(info){return csafeBuffer.rawCommands.push(info),csafeBuffer}};return ergometer.csafe.commandManager.apply(csafeBuffer,this),csafeBuffer},PerformanceMonitorBase}(ergometer.MonitorBase);ergometer.PerformanceMonitorBase=PerformanceMonitorBase}(ergometer=ergometer||{}),function(ergometer){var UsbDevice=function(){};ergometer.UsbDevice=UsbDevice;var StrokeData=function(){this.dragFactor=0,this.workDistance=0,this.workTime=0,this.splitTime=0,this.power=0,this.strokesPerMinuteAverage=0,this.strokesPerMinute=0,this.distance=0,this.totCalories=0,this.caloriesPerHour=0,this.heartRate=0};ergometer.StrokeData=StrokeData;var TrainingData=function(){this.duration=0,this.distance=0,this.workoutIntervalCount=0,this.intervalType=255,this.restTime=0,this.endDistance=0,this.endDuration=0};ergometer.TrainingData=TrainingData;var PerformanceMonitorUsb=function(_super){function PerformanceMonitorUsb(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._nSPMReads=0,_this._nSPM=0,_this._strokeStateEvent=new ergometer.pubSub.Event,_this._trainingDataEvent=new ergometer.pubSub.Event,_this._strokeDataEvent=new ergometer.pubSub.Event,_this._strokeData=new StrokeData,_this._trainingData=new TrainingData,_this._lastTrainingTime=(new Date).getTime(),_this._lastLowResUpdate=null,_this._autoUpdating=!1,_this._startPhaseTime=0,_this}return __extends(PerformanceMonitorUsb,_super),Object.defineProperty(PerformanceMonitorUsb.prototype,"strokeData",{get:function(){return this._strokeData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"trainingData",{get:function(){return this._trainingData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"strokeState",{get:function(){return this._strokeState},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"device",{get:function(){return this._device},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"strokeStateEvent",{get:function(){return this._strokeStateEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"trainingDataEvent",{get:function(){return this._trainingDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorUsb.prototype,"strokeDataEvent",{get:function(){return this._strokeDataEvent},enumerable:!0,configurable:!0}),PerformanceMonitorUsb.canUseNodeHid=function(){return"undefined"!=typeof nodehid},PerformanceMonitorUsb.canUseWebHid=function(){return void 0!==navigator.hid},PerformanceMonitorUsb.canUseCordovaHid=function(){return"undefined"!=typeof cordova&&void 0!==cordova.plugins&&void 0!==cordova.plugins.UsbHid},PerformanceMonitorUsb.canUseUsb=function(){return PerformanceMonitorUsb.canUseNodeHid()||PerformanceMonitorUsb.canUseWebHid()||PerformanceMonitorUsb.canUseCordovaHid()},PerformanceMonitorUsb.prototype.initialize=function(){_super.prototype.initialize.call(this),PerformanceMonitorUsb.canUseNodeHid()?this._driver=new ergometer.usb.DriverNodeHid:PerformanceMonitorUsb.canUseCordovaHid()?this._driver=new ergometer.usb.DriverCordovaHid:PerformanceMonitorUsb.canUseWebHid()&&(this._driver=new ergometer.usb.DriverWebHid),this._splitCommandsWhenToBig=!1,this._receivePartialBuffers=!1},Object.defineProperty(PerformanceMonitorUsb.prototype,"driver",{get:function(){return this._driver},set:function(value){this._driver=value},enumerable:!0,configurable:!0}),PerformanceMonitorUsb.prototype.driver_write=function(data){var _this=this;return this.connectionState!=ergometer.MonitorConnectionState.readyForCommunication?Promise.reject("Can not write, erogmeter is not connected"):new Promise(function(resolve,reject){_this._device.sendData(data.buffer).then(resolve).catch(function(err){_this.disconnected(),reject(err)})})},PerformanceMonitorUsb.prototype.receiveData=function(data){this.handeReceivedDriverData(data)},PerformanceMonitorUsb.prototype.sendCSafeBuffer=function(csafeBuffer){var _this=this;return this.connectionState!=ergometer.MonitorConnectionState.readyForCommunication?Promise.reject("can not send data, not connected"):new Promise(function(resolve,reject){_this.connectionState!=ergometer.MonitorConnectionState.readyForCommunication&&reject("can not send data, not connected"),_this.traceInfo("send "+JSON.stringify(csafeBuffer.rawCommands)),_super.prototype.sendCSafeBuffer.call(_this,csafeBuffer).then(function(){resolve()}).catch(function(e){_this.disconnected(),_this.handleError(e),_this.traceInfo("end buzy"),reject(e)})})},PerformanceMonitorUsb.prototype.requestDevics=function(){var _this=this;return this._driver?new Promise(function(resolve,reject){_this._driver.requestDevics().then(function(driverDevices){var result=[];driverDevices.forEach(function(driverDevice){var device=new UsbDevice;device.productId=driverDevice.productId,device.productName=driverDevice.productName,device.vendorId=driverDevice.vendorId,device.serialNumber=driverDevice.serialNumber,device._internalDevice=driverDevice,result.push(device)}),resolve(result)}).catch(reject)}):Promise.reject("driver not set")},PerformanceMonitorUsb.prototype.disconnect=function(){this.connectionState>=ergometer.MonitorConnectionState.deviceReady&&(this._device&&this._device.close(),this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady))},PerformanceMonitorUsb.prototype.disconnected=function(){this._device&&(this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady),this._device=null)},PerformanceMonitorUsb.prototype.connectToDevice=function(device){var _this=this;if(!this._driver)return Promise.reject("driver not set");if(!device)return Promise.reject("device is null");this._device=device._internalDevice,this.changeConnectionState(ergometer.MonitorConnectionState.connecting);var result=this._device.open(this.disconnected,this.handleError.bind(this),this.receiveData.bind(this));return result.then(function(){_this.changeConnectionState(ergometer.MonitorConnectionState.connected),_this.changeConnectionState(ergometer.MonitorConnectionState.readyForCommunication)}),result},PerformanceMonitorUsb.prototype.getPacketSize=function(){return ergometer.usb.USB_CSAVE_SIZE-1},PerformanceMonitorUsb.prototype.highResolutionUpdate=function(){var _this=this;this.traceInfo("start high res update");var previousStrokeState=this.strokeState;return new Promise(function(resolve,reject){_this.newCsafeBuffer().getStrokeState({onDataReceived:function(strokeState){_this.newStrokeState(strokeState)}}).send().then(function(){if(_this.traceInfo("end high res update"),_this.strokeState!=previousStrokeState){var now=(new Date).getTime(),doPowerCurveUpdate=4==_this.strokeState;doPowerCurveUpdate||null==_this._lastLowResUpdate||!_this.isWaiting&&200<now-_this._lastLowResUpdate?(_this._lastLowResUpdate=now,_this.traceInfo("Start low res update"),_this.lowResolutionUpdate().then(function(){doPowerCurveUpdate&&0<_this.powerCurveEvent.count?(_this.traceInfo("start power curveupdate"),_this.handlePowerCurve().then(function(){_this.traceInfo("end power curve and end low res update"),_this.traceInfo("resolve high"),resolve()}).catch(reject)):(_this.traceInfo("end low res update"),_this.traceInfo("resolve high"),resolve())}).catch(reject)):(_this.traceInfo("resolve high"),resolve())}else _this.traceInfo("resolve high"),resolve()}).catch(reject)})},PerformanceMonitorUsb.prototype.handlePowerCurve=function(){var _this=this;return this.newCsafeBuffer().getPowerCurve({onDataReceived:function(curve){_this.powerCurveEvent.pub(curve),_this._powerCurve=curve}}).send()},PerformanceMonitorUsb.prototype.connected=function(){var _this=this;_super.prototype.connected.call(this),setTimeout(function(){_this.autoUpdate()},500)},PerformanceMonitorUsb.prototype.listeningToEvents=function(){},PerformanceMonitorUsb.prototype.autoUpdate=function(first){var _this=this;if(void 0===first&&(first=!0),this.traceInfo("auto update :"+first),!first||0!=this.strokeStateEvent.count||0!=this.trainingDataEvent.count||0!=this.strokeStateEvent.count)if(this.connectionState!=ergometer.MonitorConnectionState.readyForCommunication||first&&this._autoUpdating)this.traceInfo("no auto update"),this._autoUpdating=!1;else{this._autoUpdating=!0;try{this.update().then(function(){_this.nextAutoUpdate()}).catch(function(error){_this.handleError(error),_this.nextAutoUpdate()})}catch(error){this.handleError(error),this.nextAutoUpdate()}}},PerformanceMonitorUsb.prototype.isWaiting=function(){return 0==this.strokeState&&0<=[0,10,11,12,13].indexOf(this.trainingData.workoutState)},PerformanceMonitorUsb.prototype.nextAutoUpdate=function(){var _this=this;this.traceInfo("nextAutoUpdate");var waitTime=this.isWaiting()?500:30;this.connectionState==ergometer.MonitorConnectionState.readyForCommunication?setTimeout(function(){_this.autoUpdate(!1)},waitTime):this._autoUpdating=!1},PerformanceMonitorUsb.prototype.update=function(){var _this=this;return new Promise(function(resolve,reject){_this.highResolutionUpdate().then(function(){var diff=(new Date).getTime()-_this._lastTrainingTime;1!=_this.trainingData.workoutState&&200<diff||1==_this.trainingData.workoutState&&1e3<diff?(_this.traceInfo("start training update"),_this.trainingDataUpdate().then(function(){_this.traceInfo("resolved training update"),resolve()},reject)):resolve()}).catch(reject)})},PerformanceMonitorUsb.prototype.calcStrokeStateDuration=function(){var duration=0;if(4==this.strokeState||2==this.strokeState){var endPhase=(new Date).getTime();duration=endPhase-this._startPhaseTime,this._startPhaseTime=endPhase}return 1!=this.strokeState&&0!=this.strokeState||(this._startPhaseTime=(new Date).getTime()),duration},PerformanceMonitorUsb.prototype.lowResolutionUpdate=function(){var _this=this;return this.newCsafeBuffer().getDragFactor({onDataReceived:function(value){_this.strokeData.dragFactor=value}}).getWorkDistance({onDataReceived:function(value){_this.strokeData.workDistance=value}}).getPace({onDataReceived:function(pace){var caloriesPerHour=0,paced=pace/1e3;if(0<pace){paced=pace/1e3;caloriesPerHour=Math.round(2.8/(paced*paced*paced)*3.4416+300)}_this.strokeData.caloriesPerHour=caloriesPerHour;var fPace=pace/2;_this.strokeData.splitTime=1e3*fPace}}).getCalories({onDataReceived:function(value){_this.strokeData.totCalories=value}}).getCadence({onDataReceived:function(value){0<value&&(_this._nSPM+=value,_this._nSPMReads++,_this.strokeData.strokesPerMinute=value,_this.strokeData.strokesPerMinuteAverage=_this._nSPM/_this._nSPMReads)}}).getPower({onDataReceived:function(value){_this.strokeData.power=value}}).getWorkTime({onDataReceived:function(value){_this.strokeData.workTime=value}}).getHorizontal({onDataReceived:function(value){_this.strokeData.distance=value}}).getHeartRate({onDataReceived:function(value){_this.strokeData.heartRate=value}}).send().then(function(){_this.traceInfo("after low res update"),_this.strokeDataEvent.pub(_this.strokeData)})},PerformanceMonitorUsb.prototype.newStrokeState=function(state){if(state!=this.strokeState){var oldState=this.strokeState;this._strokeState=state;var duration=this.calcStrokeStateDuration();this.strokeStateEvent.pub(oldState,state,duration)}},PerformanceMonitorUsb.prototype.trainingDataUpdate=function(){var _this=this;this._lastTrainingTime=(new Date).getTime();var changed=!1,strokeDataChanged=!1,actualDistance=0,duration=0,distance=0;return this.newCsafeBuffer().getWorkoutType({onDataReceived:function(value){_this.trainingData.workoutType!=value&&(_this.trainingData.workoutType=value,changed=!0)}}).getWorkoutState({onDataReceived:function(value){_this.trainingData.workoutState!=value&&(_this.trainingData.workoutState=value,changed=!0)}}).getWorkoutIntervalCount({onDataReceived:function(value){_this.trainingData.workoutIntervalCount!=value&&(_this.trainingData.workoutIntervalCount=value,changed=!0)}}).getWorkoutIntervalType({onDataReceived:function(value){_this.trainingData.intervalType!=value&&(_this.trainingData.intervalType=value,changed=!0)}}).getWorkoutIntervalRestTime({onDataReceived:function(value){_this.trainingData.restTime!=value&&(_this.trainingData.restTime=value,changed=!0)}}).getWorkTime({onDataReceived:function(value){duration=value}}).getWorkDistance({onDataReceived:function(value){distance=value}}).getWork({onDataReceived:function(value){value}}).getHorizontal({onDataReceived:function(value){actualDistance=value}}).send().then(function(){if(_this.strokeState<=1&&0==actualDistance){0!=_this._nSPM&&(_this.resetStartRowing(),strokeDataChanged=!0);var durationRound=Math.round(duration);_this.trainingData.duration!=durationRound&&(_this.trainingData.duration=durationRound,changed=!0);var distanceRound=Math.round(distance);_this.trainingData.distance!=distanceRound&&(_this.trainingData.distance=distanceRound,changed=!0)}12==_this.trainingData.workoutState&&0===_this.trainingData.endDuration&&0===_this.trainingData.endDistance&&(2<=_this.trainingData.workoutType&&_this.trainingData.workoutType<=5&&(_this.trainingData.duration&&0<_this.trainingData.duration?(_this.strokeData.workTime=_this.trainingData.duration,_this.strokeData.workDistance=distance,_this.strokeData.distance=distance,_this.trainingData.endDistance=distance,_this.trainingData.endDuration=_this.trainingData.duration):0<_this.trainingData.distance&&(_this.strokeData.workTime=duration,_this.strokeData.workDistance=0,_this.strokeData.distance=distance,_this.trainingData.endDistance=_this.trainingData.distance,_this.trainingData.endDuration=duration),strokeDataChanged=!0),changed=!0),12!=_this.trainingData.workoutState&&(_this.trainingData.endDistance||0!=_this.trainingData.endDistance||0!=_this.trainingData.endDuration||_this.trainingData.endDuration)&&(_this.trainingData.endDistance=0,_this.trainingData.endDuration=0,changed=!0),strokeDataChanged&&_this._strokeDataEvent.pub(_this.strokeData),changed&&_this.trainingDataEvent.pub(_this.trainingData)})},PerformanceMonitorUsb.prototype.resetStartRowing=function(){this._nSPM=0,this._nSPMReads=0,this.strokeData.dragFactor=0,this.strokeData.splitTime=0,this.strokeData.power=0,this.strokeData.strokesPerMinuteAverage=0,this.strokeData.strokesPerMinute=0,this.strokeData.distance=0,this.strokeData.totCalories=0,this.strokeData.caloriesPerHour=0,this.strokeData.heartRate=0},PerformanceMonitorUsb}(ergometer.PerformanceMonitorBase);ergometer.PerformanceMonitorUsb=PerformanceMonitorUsb}(ergometer=ergometer||{}),function(ergometer){var PerformanceMonitorBle=function(_super){function PerformanceMonitorBle(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._devices=[],_this._multiplex=!1,_this._multiplexSubscribeCount=0,_this._sampleRate=1,_this._autoReConnect=!1,_this._generalStatusEventAttachedByPowerCurve=!1,_this._recording=!1,_this._registeredGuids={},_this}return __extends(PerformanceMonitorBle,_super),Object.defineProperty(PerformanceMonitorBle.prototype,"recordingDriver",{get:function(){return this._recordingDriver||(this._recordingDriver=new ergometer.ble.RecordingDriver(this,this._driver)),this._recordingDriver},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"driver",{get:function(){return this.recording?this.recordingDriver:this.replaying?this.replayDriver:this._driver},set:function(value){this._driver=value},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"recording",{get:function(){return this._recording},set:function(value){(this._recording=value)&&this.recordingDriver.startRecording()},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"replayDriver",{get:function(){return this._replayDriver||(this._replayDriver=new ergometer.ble.ReplayDriver(this,this._driver)),this._replayDriver},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"replaying",{get:function(){return this.replayDriver.playing},set:function(value){this.replayDriver.playing=value},enumerable:!0,configurable:!0}),PerformanceMonitorBle.prototype.replay=function(events){this.replayDriver.replay(events)},Object.defineProperty(PerformanceMonitorBle.prototype,"recordingEvents",{get:function(){return this.recordingDriver.events},set:function(value){this.recordingDriver.events=value},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"autoReConnect",{get:function(){return this._autoReConnect},set:function(value){this._autoReConnect=value},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"multiplex",{get:function(){return this._multiplex},set:function(value){if(value!=this._multiplex){if(this.connectionState>=ergometer.MonitorConnectionState.servicesFound)throw"property multiplex can not be changed after the connection is made.";this._multiplex=value}},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"devices",{get:function(){return this._devices},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingGeneralStatus",{get:function(){return this._rowingGeneralStatus},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStatus1",{get:function(){return this._rowingAdditionalStatus1},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStatus2",{get:function(){return this._rowingAdditionalStatus2},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingStrokeData",{get:function(){return this._rowingStrokeData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStrokeData",{get:function(){return this._rowingAdditionalStrokeData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingSplitIntervalData",{get:function(){return this._rowingSplitIntervalData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalSplitIntervalData",{get:function(){return this._rowingAdditionalSplitIntervalData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"workoutSummaryData",{get:function(){return this._workoutSummaryData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"additionalWorkoutSummaryData",{get:function(){return this._additionalWorkoutSummaryData},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"additionalWorkoutSummaryData2",{get:function(){return this._additionalWorkoutSummaryData2},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"heartRateBeltInformation",{get:function(){return this._heartRateBeltInformation},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingGeneralStatusEvent",{get:function(){return this._rowingGeneralStatusEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStatus1Event",{get:function(){return this._rowingAdditionalStatus1Event},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStatus2Event",{get:function(){return this._rowingAdditionalStatus2Event},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingStrokeDataEvent",{get:function(){return this._rowingStrokeDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalStrokeDataEvent",{get:function(){return this._rowingAdditionalStrokeDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingSplitIntervalDataEvent",{get:function(){return this._rowingSplitIntervalDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"rowingAdditionalSplitIntervalDataEvent",{get:function(){return this._rowingAdditionalSplitIntervalDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"workoutSummaryDataEvent",{get:function(){return this._workoutSummaryDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"additionalWorkoutSummaryDataEvent",{get:function(){return this._additionalWorkoutSummaryDataEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"additionalWorkoutSummaryData2Event",{get:function(){return this._additionalWorkoutSummaryData2Event},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"heartRateBeltInformationEvent",{get:function(){return this._heartRateBeltInformationEvent},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"deviceInfo",{get:function(){return this._deviceInfo},enumerable:!0,configurable:!0}),Object.defineProperty(PerformanceMonitorBle.prototype,"sampleRate",{get:function(){return this._sampleRate},set:function(value){var _this=this;if(value!=this._sampleRate){var dataView=new DataView(new ArrayBuffer(1));dataView.setUint8(0,value),this.driver.writeCharacteristic(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_STATUS_SAMPLE_RATE_CHARACTERISIC,dataView).then(function(){_this._sampleRate=value},this.getErrorHandlerFunc("Can not set sample rate"))}},enumerable:!0,configurable:!0}),PerformanceMonitorBle.prototype.disconnect=function(){this.connectionState>=ergometer.MonitorConnectionState.deviceReady&&(this.driver.disconnect(),this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady))},PerformanceMonitorBle.prototype.clearAllBuffers=function(){this.clearRegisterdGuids()},PerformanceMonitorBle.prototype.enableMultiplexNotification=function(){var result,_this=this;return result=0==this._multiplexSubscribeCount?this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.MULTIPLEXED_INFO_CHARACTERISIC,function(data){_this.handleDataCallbackMulti(data)}).catch(this.getErrorHandlerFunc("Can not enable multiplex")):Promise.resolve(),this._multiplexSubscribeCount++,result},PerformanceMonitorBle.prototype.disableMultiPlexNotification=function(){return this._multiplexSubscribeCount--,0==this._multiplexSubscribeCount?this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.MULTIPLEXED_INFO_CHARACTERISIC).catch(this.getErrorHandlerFunc("can not disable multiplex")):Promise.resolve()},PerformanceMonitorBle.prototype.clearRegisterdGuids=function(){this._registeredGuids={}},PerformanceMonitorBle.prototype.enableNotification=function(serviceUIID,characteristicUUID,receive){return 1===this._registeredGuids[characteristicUUID]?Promise.resolve():(this._registeredGuids[characteristicUUID]=1,this.driver.enableNotification(serviceUIID,characteristicUUID,receive))},PerformanceMonitorBle.prototype.disableNotification=function(serviceUIID,characteristicUUID){return 1===this._registeredGuids[characteristicUUID]?(this._registeredGuids[characteristicUUID]=0,this.driver.disableNotification(serviceUIID,characteristicUUID)):Promise.resolve()},PerformanceMonitorBle.prototype.enableDisableNotification=function(){var _this=this;_super.prototype.enableDisableNotification.call(this);var promises=[],enableMultiPlex=!1;return this.connectionState>=ergometer.MonitorConnectionState.servicesFound&&(0<this.rowingGeneralStatusEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_STATUS_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingGeneralStatus)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_STATUS_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingAdditionalStatus1Event.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STATUS1_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingAdditionalStatus1)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STATUS1_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingAdditionalStatus2Event.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STATUS2_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingAdditionalStatus2)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STATUS2_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingStrokeDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.STROKE_DATA_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingStrokeData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.STROKE_DATA_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingAdditionalStrokeDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STROKE_DATA_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingAdditionalStrokeData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_STROKE_DATA_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingSplitIntervalDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.SPLIT_INTERVAL_DATA_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingSplitIntervalData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.SPLIT_INTERVAL_DATA_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.rowingAdditionalSplitIntervalDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_SPLIT_INTERVAL_DATA_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleRowingAdditionalSplitIntervalData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_SPLIT_INTERVAL_DATA_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.workoutSummaryDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_SUMMARY_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleWorkoutSummaryData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_SUMMARY_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.additionalWorkoutSummaryDataEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_ROWING_SUMMARY_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleAdditionalWorkoutSummaryData)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.EXTRA_ROWING_SUMMARY_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.additionalWorkoutSummaryData2Event.count&&this.multiplex&&(enableMultiPlex=!0),0<this.heartRateBeltInformationEvent.count?this.multiplex?enableMultiPlex=!0:promises.push(this.enableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.HEART_RATE_BELT_INFO_CHARACTERISIC,function(data){_this.handleDataCallback(data,_this.handleHeartRateBeltInformation)}).catch(this.getErrorHandlerFunc(""))):this.multiplex||promises.push(this.disableNotification(ergometer.ble.PMROWING_SERVICE,ergometer.ble.HEART_RATE_BELT_INFO_CHARACTERISIC).catch(this.getErrorHandlerFunc(""))),0<this.powerCurveEvent.count?this._generalStatusEventAttachedByPowerCurve||(this._generalStatusEventAttachedByPowerCurve=!0,this.rowingGeneralStatusEvent.sub(this,this.onPowerCurveRowingGeneralStatus)):this._generalStatusEventAttachedByPowerCurve&&(this._generalStatusEventAttachedByPowerCurve=!1,this.rowingGeneralStatusEvent.unsub(this.onPowerCurveRowingGeneralStatus)),this.multiplex&&enableMultiPlex?(enableMultiPlex=!0,promises.push(this.enableMultiplexNotification())):promises.push(this.disableMultiPlexNotification())),Promise.all(promises).then(function(){return Promise.resolve()})},PerformanceMonitorBle.prototype.onPowerCurveRowingGeneralStatus=function(data){var _this=this;this.logLevel>=ergometer.LogLevel.trace&&this.traceInfo("RowingGeneralStatus:"+JSON.stringify(data)),this.rowingGeneralStatus&&this.rowingGeneralStatus.strokeState!=data.strokeState&&4==data.strokeState&&this.newCsafeBuffer().getPowerCurve({onDataReceived:function(curve){_this.powerCurveEvent.pub(curve),_this._powerCurve=curve}}).send()},PerformanceMonitorBle.prototype.currentDriverIsWebBlueTooth=function(){return this._driver instanceof ergometer.ble.DriverWebBlueTooth},PerformanceMonitorBle.prototype.initialize=function(){var _this=this;_super.prototype.initialize.call(this),this._splitCommandsWhenToBig=!0,this._receivePartialBuffers=!0,bleCentral.available()?this._driver=new bleCentral.DriverBleCentral([ergometer.ble.PMDEVICE]):"undefined"!=typeof bleat&&bleat?this._driver=new ergometer.ble.DriverBleat:"undefined"!=typeof simpleBLE&&simpleBLE?this._driver=new ergometer.ble.DriverSimpleBLE:ergometer.ble.hasWebBlueTooth()?this._driver=new ergometer.ble.DriverWebBlueTooth(this,[ergometer.ble.PMDEVICE],[ergometer.ble.PMDEVICE_INFO_SERVICE,ergometer.ble.PMCONTROL_SERVICE,ergometer.ble.PMROWING_SERVICE]):this.handleError("No suitable blue tooth driver found to connect to the ergometer. You need to load bleat on native platforms and a browser with web blue tooth capability.");function enableDisableFunc(){_this.enableDisableNotification().catch(_this.handleError)}this._rowingGeneralStatusEvent=new ergometer.pubSub.Event,this.rowingGeneralStatusEvent.registerChangedEvent(enableDisableFunc),this._rowingAdditionalStatus1Event=new ergometer.pubSub.Event,this.rowingAdditionalStatus1Event.registerChangedEvent(enableDisableFunc),this._rowingAdditionalStatus2Event=new ergometer.pubSub.Event,this.rowingAdditionalStatus2Event.registerChangedEvent(enableDisableFunc),this._rowingStrokeDataEvent=new ergometer.pubSub.Event,this.rowingStrokeDataEvent.registerChangedEvent(enableDisableFunc),this._rowingAdditionalStrokeDataEvent=new ergometer.pubSub.Event,this.rowingAdditionalStrokeDataEvent.registerChangedEvent(enableDisableFunc),this._rowingSplitIntervalDataEvent=new ergometer.pubSub.Event,this.rowingSplitIntervalDataEvent.registerChangedEvent(enableDisableFunc),this._rowingAdditionalSplitIntervalDataEvent=new ergometer.pubSub.Event,this.rowingAdditionalSplitIntervalDataEvent.registerChangedEvent(enableDisableFunc),this._workoutSummaryDataEvent=new ergometer.pubSub.Event,this.workoutSummaryDataEvent.registerChangedEvent(enableDisableFunc),this._additionalWorkoutSummaryDataEvent=new ergometer.pubSub.Event,this.additionalWorkoutSummaryDataEvent.registerChangedEvent(enableDisableFunc),this._additionalWorkoutSummaryData2Event=new ergometer.pubSub.Event,this.additionalWorkoutSummaryData2Event.registerChangedEvent(enableDisableFunc),this._heartRateBeltInformationEvent=new ergometer.pubSub.Event,this.heartRateBeltInformationEvent.registerChangedEvent(enableDisableFunc)},PerformanceMonitorBle.prototype.removeDevice=function(device){this._devices=this._devices.splice(this._devices.indexOf(device),1)},PerformanceMonitorBle.prototype.addDevice=function(device){var existing=this.findDevice(device.name);existing&&this.removeDevice(existing),this._devices.push(device),this._devices.sort(function(device1,device2){return device2.quality-device1.quality})},PerformanceMonitorBle.prototype.findDevice=function(name){var result=null;return this._devices.forEach(function(device){device.name==name&&(result=device)}),result},PerformanceMonitorBle.prototype.stopScan=function(){this.connectionState==ergometer.MonitorConnectionState.scanning&&this.driver.stopScan()},PerformanceMonitorBle.prototype.startScan=function(deviceFound,errorFn){var _this=this;return this._devices=[],this.stopScan(),this.changeConnectionState(ergometer.MonitorConnectionState.scanning),this.driver.startScan(function(device){if(device.name&&(_this.debugInfo(device.name+" : "+device.address.toString().split(":").join("")),device.name.match(/PM\d \d*/g))){_this.showInfo("Status: DeviceInfo found: "+device.name);var deviceInfo={connected:!1,_internalDevice:device,name:device.name,address:device.address,quality:2*(device.rssi+100)};_this.addDevice(deviceInfo),deviceFound&&deviceFound(deviceInfo)&&_this.connectToDevice(deviceInfo.name)}}).then(function(){_this.showInfo("Status: Scanning...")}).catch(this.getErrorHandlerFunc("Scan error",errorFn))},PerformanceMonitorBle.prototype.connectToDevice=function(deviceName){var _this=this;this.showInfo("Status: Connecting..."),this.stopScan(),this.changeConnectionState(ergometer.MonitorConnectionState.connecting);var deviceInfo=this.findDevice(deviceName);if(!deviceInfo)throw"Device "+deviceName+" not found";return this._deviceInfo=deviceInfo,this.driver.connect(deviceInfo._internalDevice,function(){_this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady),_this.showInfo("Disconnected"),_this.autoReConnect&&!_this.currentDriverIsWebBlueTooth()&&setTimeout(function(){_this.startScan(function(device){return device.name==deviceName})},2e3)}).then(function(){return _this.changeConnectionState(ergometer.MonitorConnectionState.connected),_this.showInfo("Status: Connected"),_this.readPheripheralInfo()}).then(function(){_this.deviceConnected()}).catch(function(errorCode){_this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady),_this.handleError(errorCode)})},PerformanceMonitorBle.prototype.readStringCharacteristic=function(serviceUUID,UUID){var _this=this;return new Promise(function(resolve,reject){_this.driver.readCharacteristic(serviceUUID,UUID).then(function(data){resolve(ergometer.utils.bufferToString(data))},reject)})},PerformanceMonitorBle.prototype.readSampleRate=function(){var _this=this;return this.driver.readCharacteristic(ergometer.ble.PMROWING_SERVICE,ergometer.ble.ROWING_STATUS_SAMPLE_RATE_CHARACTERISIC).then(function(data){var view=new DataView(data);_this._sampleRate=view.getUint8(0)})},PerformanceMonitorBle.prototype.readPheripheralInfo=function(){var _this=this;return new Promise(function(resolve,reject){Promise.all([_this.readStringCharacteristic(ergometer.ble.PMDEVICE_INFO_SERVICE,ergometer.ble.SERIALNUMBER_CHARACTERISTIC).then(function(value){_this._deviceInfo.serial=value}),_this.readStringCharacteristic(ergometer.ble.PMDEVICE_INFO_SERVICE,ergometer.ble.HWREVISION_CHARACTERISIC).then(function(value){_this._deviceInfo.hardwareRevision=value}),_this.readStringCharacteristic(ergometer.ble.PMDEVICE_INFO_SERVICE,ergometer.ble.FWREVISION_CHARACTERISIC).then(function(value){_this._deviceInfo.firmwareRevision=value}),_this.readStringCharacteristic(ergometer.ble.PMDEVICE_INFO_SERVICE,ergometer.ble.MANUFNAME_CHARACTERISIC).then(function(value){_this._deviceInfo.manufacturer=value,_this._deviceInfo.connected=!0}),_this.readSampleRate()]).then(function(){resolve()},function(e){_this.handleError(e),resolve(e)})})},PerformanceMonitorBle.prototype.handleRowingGeneralStatus=function(data){var parsed={elapsedTime:10*ergometer.utils.getUint24(data,0),distance:ergometer.utils.getUint24(data,3)/10,workoutType:data.getUint8(6),intervalType:data.getUint8(7),workoutState:data.getUint8(8),rowingState:data.getUint8(9),strokeState:data.getUint8(10),totalWorkDistance:ergometer.utils.getUint24(data,11),workoutDuration:ergometer.utils.getUint24(data,14),workoutDurationType:data.getUint8(17),dragFactor:data.getUint8(18)};0==parsed.workoutDurationType&&(parsed.workoutDuration=10*parsed.workoutDuration),JSON.stringify(this.rowingGeneralStatus)!==JSON.stringify(parsed)&&(this.rowingGeneralStatusEvent.pub(parsed),this._rowingGeneralStatus=parsed)},PerformanceMonitorBle.prototype.calcPace=function(lowByte,highByte){return 10*(lowByte+256*highByte)},PerformanceMonitorBle.prototype.handleRowingAdditionalStatus1=function(data){var parsed={elapsedTime:10*ergometer.utils.getUint24(data,0),speed:data.getUint16(3)/1e3,strokeRate:data.getUint8(5),heartRate:ergometer.utils.valueToNullValue(data.getUint8(6),255),currentPace:this.calcPace(data.getUint8(7),data.getUint8(8)),averagePace:this.calcPace(data.getUint8(9),data.getUint8(10)),restDistance:data.getUint16(11),restTime:10*ergometer.utils.getUint24(data,13),averagePower:null};18==data.byteLength&&(parsed.averagePower=data.getUint16(16)),JSON.stringify(this.rowingAdditionalStatus1)!==JSON.stringify(parsed)&&(this.rowingAdditionalStatus1Event.pub(parsed),this._rowingAdditionalStatus1=parsed)},PerformanceMonitorBle.prototype.handleRowingAdditionalStatus2=function(data){var parsed;parsed=20==data.byteLength?{elapsedTime:10*ergometer.utils.getUint24(data,0),intervalCount:data.getUint8(3),averagePower:data.getUint16(4),totalCalories:data.getUint16(6),splitAveragePace:this.calcPace(data.getUint8(8),data.getUint8(9)),splitAveragePower:data.getUint16(10),splitAverageCalories:data.getUint16(12),lastSplitTime:100*data.getUint16(14),lastSplitDistance:ergometer.utils.getUint24(data,17)}:{elapsedTime:10*ergometer.utils.getUint24(data,0),intervalCount:data.getUint8(3),averagePower:null,totalCalories:data.getUint16(4),splitAveragePace:this.calcPace(data.getUint8(6),data.getUint8(7)),splitAveragePower:data.getUint16(8),splitAverageCalories:data.getUint16(10),lastSplitTime:100*data.getUint16(12),lastSplitDistance:ergometer.utils.getUint24(data,15)},JSON.stringify(this.rowingAdditionalStatus2)!==JSON.stringify(parsed)&&(this.rowingAdditionalStatus2Event.pub(parsed),this._rowingAdditionalStatus2=parsed)},PerformanceMonitorBle.prototype.handleRowingStrokeData=function(data){var parsed;parsed=20==data.byteLength?{elapsedTime:10*ergometer.utils.getUint24(data,0),distance:ergometer.utils.getUint24(data,3)/10,driveLength:data.getUint8(6)/100,driveTime:10*data.getUint8(7),strokeRecoveryTime:10*(data.getUint8(8)+256*data.getUint8(9)),strokeDistance:data.getUint16(10)/100,peakDriveForce:data.getUint16(12)/10,averageDriveForce:data.getUint16(14)/10,workPerStroke:data.getUint16(16)/10,strokeCount:data.getUint8(18)+256*data.getUint8(19)}:{elapsedTime:10*ergometer.utils.getUint24(data,0),distance:ergometer.utils.getUint24(data,3)/10,driveLength:data.getUint8(6)/100,driveTime:10*data.getUint8(7),strokeRecoveryTime:10*data.getUint16(8),strokeDistance:data.getUint16(10)/100,peakDriveForce:data.getUint16(12)/10,averageDriveForce:data.getUint16(14)/10,workPerStroke:null,strokeCount:data.getUint8(16)+256*data.getUint8(17)},JSON.stringify(this.rowingStrokeData)!==JSON.stringify(parsed)&&(this.rowingStrokeDataEvent.pub(parsed),this._rowingStrokeData=parsed)},PerformanceMonitorBle.prototype.handleRowingAdditionalStrokeData=function(data){var parsed={elapsedTime:10*ergometer.utils.getUint24(data,0),strokePower:data.getUint8(3)+256*data.getUint8(4),strokeCalories:data.getUint16(5),strokeCount:data.getUint8(7)+256*data.getUint8(8),projectedWorkTime:1e3*ergometer.utils.getUint24(data,9),projectedWorkDistance:ergometer.utils.getUint24(data,12),workPerStroke:null};17==data.byteLength&&(parsed.workPerStroke=data.getUint16(15)),JSON.stringify(this.rowingAdditionalStrokeData)!==JSON.stringify(parsed)&&(this.rowingAdditionalStrokeDataEvent.pub(parsed),this._rowingAdditionalStrokeData=parsed)},PerformanceMonitorBle.prototype.handleRowingSplitIntervalData=function(data){var parsed={elapsedTime:10*ergometer.utils.getUint24(data,0),distance:ergometer.utils.getUint24(data,3)/10,intervalTime:100*ergometer.utils.getUint24(data,6),intervalDistance:ergometer.utils.getUint24(data,9),intervalRestTime:1e3*data.getUint16(12),intervalRestDistance:data.getUint16(14),intervalType:data.getUint8(16),intervalNumber:data.getUint8(17)};JSON.stringify(this.rowingSplitIntervalData)!==JSON.stringify(parsed)&&(this.rowingSplitIntervalDataEvent.pub(parsed),this._rowingSplitIntervalData=parsed)},PerformanceMonitorBle.prototype.handleRowingAdditionalSplitIntervalData=function(data){var parsed={elapsedTime:10*ergometer.utils.getUint24(data,0),intervalAverageStrokeRate:data.getUint8(3),intervalWorkHeartrate:data.getUint8(4),intervalRestHeartrate:data.getUint8(5),intervalAveragePace:10*data.getUint16(6),intervalTotalCalories:data.getUint16(8),intervalAverageCalories:data.getUint16(10),intervalSpeed:data.getUint16(12)/1e3,intervalPower:data.getUint16(14),splitAverageDragFactor:data.getUint8(16),intervalNumber:data.getUint8(17)};JSON.stringify(this.rowingAdditionalSplitIntervalData)!==JSON.stringify(parsed)&&(this.rowingAdditionalSplitIntervalDataEvent.pub(parsed),this._rowingAdditionalSplitIntervalData=parsed)},PerformanceMonitorBle.prototype.handleWorkoutSummaryData=function(data){var parsed={logEntryDate:data.getUint16(0),logEntryTime:data.getUint16(2),elapsedTime:10*ergometer.utils.getUint24(data,4),distance:ergometer.utils.getUint24(data,7)/10,averageStrokeRate:data.getUint8(10),endingHeartrate:data.getUint8(11),averageHeartrate:data.getUint8(12),minHeartrate:data.getUint8(13),maxHeartrate:data.getUint8(14),dragFactorAverage:data.getUint8(15),recoveryHeartRate:data.getUint8(16),workoutType:data.getUint8(17),averagePace:null};20==data.byteLength&&(parsed.averagePace=data.getUint16(18)),JSON.stringify(this.workoutSummaryData)!==JSON.stringify(parsed)&&(this.workoutSummaryDataEvent.pub(parsed),this._workoutSummaryData=parsed)},PerformanceMonitorBle.prototype.handleAdditionalWorkoutSummaryData=function(data){var parsed;parsed=19==data.byteLength?{logEntryDate:data.getUint16(0),logEntryTime:data.getUint16(1),intervalType:data.getUint8(4),intervalSize:data.getUint16(5),intervalCount:data.getUint8(7),totalCalories:data.getUint16(8),watts:data.getUint16(10),totalRestDistance:ergometer.utils.getUint24(data,12),intervalRestTime:data.getUint16(15),averageCalories:data.getUint16(17)}:{logEntryDate:data.getUint16(0),logEntryTime:data.getUint16(2),intervalType:null,intervalSize:data.getUint16(4),intervalCount:data.getUint8(6),totalCalories:data.getUint16(7),watts:data.getUint16(9),totalRestDistance:ergometer.utils.getUint24(data,11),intervalRestTime:data.getUint16(14),averageCalories:data.getUint16(16)},JSON.stringify(this.additionalWorkoutSummaryData)!==JSON.stringify(parsed)&&(this.additionalWorkoutSummaryDataEvent.pub(parsed),this._additionalWorkoutSummaryData=parsed)},PerformanceMonitorBle.prototype.handleAdditionalWorkoutSummaryData2=function(data){var parsed={logEntryDate:data.getUint16(0),logEntryTime:data.getUint16(1),averagePace:data.getUint16(4),gameIdentifier:data.getUint8(6),gameScore:data.getUint16(7),ergMachineType:data.getUint8(9)};JSON.stringify(this.additionalWorkoutSummaryData2)!==JSON.stringify(parsed)&&(this.additionalWorkoutSummaryData2Event.pub(parsed),this._additionalWorkoutSummaryData2=parsed)},PerformanceMonitorBle.prototype.handleHeartRateBeltInformation=function(data){var parsed={manufacturerId:data.getUint8(0),deviceType:data.getUint8(1),beltId:data.getUint32(2)};JSON.stringify(this.heartRateBeltInformation)!==JSON.stringify(parsed)&&(this.heartRateBeltInformationEvent.pub(parsed),this._heartRateBeltInformation=parsed)},PerformanceMonitorBle.prototype.deviceConnected=function(){var _this=this;this.debugInfo("readServices success"),this.debugInfo("Status: notifications are activated"),this.changeConnectionState(ergometer.MonitorConnectionState.servicesFound),this.handleCSafeNotifications().then(function(){return _this.enableDisableNotification()}).then(function(){_this.changeConnectionState(ergometer.MonitorConnectionState.readyForCommunication)}).catch(this.handleError)},PerformanceMonitorBle.prototype.handleCSafeNotifications=function(){var _this=this;return this.traceInfo("enable notifications csafe"),this.enableNotification(ergometer.ble.PMCONTROL_SERVICE,ergometer.ble.RECEIVE_FROM_PM_CHARACTERISIC,function(data){var dataView=new DataView(data);_this.handeReceivedDriverData(dataView)}).catch(this.getErrorHandlerFunc(""))},PerformanceMonitorBle.prototype.handleDataCallbackMulti=function(data){var ar=new DataView(data),dataType=ar.getUint8(0);switch(ar=new DataView(data,1),dataType){case 49:0<this.rowingGeneralStatusEvent.count&&this.handleRowingGeneralStatus(ar);break;case 50:0<this.rowingAdditionalStatus1Event.count&&this.handleRowingAdditionalStatus1(ar);break;case 51:0<this.rowingAdditionalStatus2Event.count&&this.handleRowingAdditionalStatus2(ar);break;case 53:0<this.rowingStrokeDataEvent.count&&this.handleRowingStrokeData(ar);break;case 54:0<this.rowingAdditionalStrokeDataEvent.count&&this.handleRowingAdditionalStrokeData(ar);break;case 55:0<this.rowingSplitIntervalDataEvent.count&&this.handleRowingSplitIntervalData(ar);break;case 56:0<this.rowingAdditionalSplitIntervalDataEvent.count&&this.handleRowingAdditionalSplitIntervalData(ar);break;case 57:0<this.workoutSummaryDataEvent.count&&this.handleWorkoutSummaryData(ar);break;case 58:0<this.additionalWorkoutSummaryDataEvent.count&&this.handleAdditionalWorkoutSummaryData(ar);break;case 59:0<this.heartRateBeltInformationEvent.count&&this.handleHeartRateBeltInformation(ar);break;case 60:0<this.additionalWorkoutSummaryData2Event.count&&this.handleAdditionalWorkoutSummaryData2(ar)}},PerformanceMonitorBle.prototype.handleDataCallback=function(data,func){var ar=new DataView(data);func.apply(this,[ar])},PerformanceMonitorBle.prototype.driver_write=function(data){return this.driver.writeCharacteristic(ergometer.ble.PMCONTROL_SERVICE,ergometer.ble.TRANSMIT_TO_PM_CHARACTERISIC,data)},PerformanceMonitorBle.prototype.getPacketSize=function(){return ergometer.ble.PACKET_SIZE},PerformanceMonitorBle}(ergometer.PerformanceMonitorBase);ergometer.PerformanceMonitorBle=PerformanceMonitorBle}(ergometer=ergometer||{}),function(ergometer){var HeartRateMonitorBle=function(_super){function HeartRateMonitorBle(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._devices=[],_this._heartRateDataEvent=new ergometer.pubSub.Event,_this._registeredGuids={},_this}return __extends(HeartRateMonitorBle,_super),Object.defineProperty(HeartRateMonitorBle.prototype,"driver",{get:function(){return this._driver},enumerable:!0,configurable:!0}),Object.defineProperty(HeartRateMonitorBle.prototype,"heartRateDataEvent",{get:function(){return this._heartRateDataEvent},enumerable:!0,configurable:!0}),HeartRateMonitorBle.prototype.initialize=function(){_super.prototype.initialize.call(this),bleCentral.available()?this._driver=new bleCentral.DriverBleCentral([ergometer.ble.HEART_RATE_DEVICE_SERVICE]):"undefined"!=typeof bleat&&bleat?this._driver=new ergometer.ble.DriverBleat:"undefined"!=typeof simpleBLE&&simpleBLE?this._driver=new ergometer.ble.DriverSimpleBLE:ergometer.ble.hasWebBlueTooth()?this._driver=new ergometer.ble.DriverWebBlueTooth(this,[ergometer.ble.HEART_RATE_DEVICE_SERVICE],[]):this.handleError("No suitable blue tooth driver found to connect to the ergometer. You need to load bleat on native platforms and a browser with web blue tooth capability.")},HeartRateMonitorBle.prototype.disconnect=function(){this.connectionState>=ergometer.MonitorConnectionState.deviceReady&&(this.driver.disconnect(),this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady))},Object.defineProperty(HeartRateMonitorBle.prototype,"deviceInfo",{get:function(){return this._deviceInfo},enumerable:!0,configurable:!0}),HeartRateMonitorBle.prototype.currentDriverIsWebBlueTooth=function(){return this._driver instanceof ergometer.ble.DriverWebBlueTooth},HeartRateMonitorBle.prototype.removeDevice=function(device){this._devices=this._devices.splice(this._devices.indexOf(device),1)},HeartRateMonitorBle.prototype.addDevice=function(device){var existing=this.findDevice(device.name);existing&&this.removeDevice(existing),this._devices.push(device),this._devices.sort(function(device1,device2){return device2.quality-device1.quality})},HeartRateMonitorBle.prototype.findDevice=function(name){var result=null;return this._devices.forEach(function(device){device.name==name&&(result=device)}),result},HeartRateMonitorBle.prototype.stopScan=function(){this.connectionState==ergometer.MonitorConnectionState.scanning&&this.driver.stopScan()},HeartRateMonitorBle.prototype.startScan=function(deviceFound,errorFn){var _this=this;return this._devices=[],this.stopScan(),this.changeConnectionState(ergometer.MonitorConnectionState.scanning),this.driver.startScan(function(device){if(device.name){_this.debugInfo(device.name+" : "+device.address.toString().split(":").join("")),_this.showInfo("Status: DeviceInfo found: "+device.name);var deviceInfo={connected:!1,_internalDevice:device,name:device.name,address:device.address,quality:2*(device.rssi+100)};_this.addDevice(deviceInfo),deviceFound&&deviceFound(deviceInfo)&&_this.connectToDevice(deviceInfo.name)}}).then(function(){_this.showInfo("Status: Scanning...")}).catch(this.getErrorHandlerFunc("Scan error",errorFn))},HeartRateMonitorBle.prototype.connectToDevice=function(deviceName){var _this=this;this.showInfo("Status: Connecting..."),this.stopScan(),this.changeConnectionState(ergometer.MonitorConnectionState.connecting);var deviceInfo=this.findDevice(deviceName);if(!deviceInfo)throw"Device "+deviceName+" not found";return this._deviceInfo=deviceInfo,this.driver.connect(deviceInfo._internalDevice,function(){_this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady),_this.showInfo("Disconnected")}).then(function(){_this.changeConnectionState(ergometer.MonitorConnectionState.connected),_this.showInfo("Status: Connected")}).then(function(){_this.deviceConnected()}).catch(function(errorCode){_this.changeConnectionState(ergometer.MonitorConnectionState.deviceReady),_this.handleError(errorCode)})},HeartRateMonitorBle.prototype.deviceConnected=function(){var _this=this;this.debugInfo("readServices success"),this.debugInfo("Status: notifications are activated"),this.changeConnectionState(ergometer.MonitorConnectionState.servicesFound),this.driver.enableNotification(ergometer.ble.HEART_RATE_DEVICE_SERVICE,ergometer.ble.HEART_RATE_MEASUREMENT,this.handleDataHeartRate.bind(this)).then(function(){_this.changeConnectionState(ergometer.MonitorConnectionState.readyForCommunication)}).catch(this.handleError)},HeartRateMonitorBle.prototype.handleDataHeartRate=function(data){var value=new DataView(data),flags=value.getUint8(0),result={},index=1;1&flags?(result.heartRate=value.getUint16(index,!0),index+=2):(result.heartRate=value.getUint8(index),index+=1);var contactDetected=2&flags;if(4&flags&&(result.contactDetected=!!contactDetected),8&flags&&(result.energyExpended=value.getUint16(index,!0),index+=2),16&flags){for(var rrIntervals=[];index+1<value.byteLength;index+=2)rrIntervals.push(value.getUint16(index,!0));result.rrIntervals=rrIntervals}this.heartRateDataEvent.pub(result)},HeartRateMonitorBle}(ergometer.MonitorBase);ergometer.HeartRateMonitorBle=HeartRateMonitorBle}(ergometer=ergometer||{});